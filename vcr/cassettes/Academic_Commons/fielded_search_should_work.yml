---
http_interactions:
- request:
    method: get
    uri: "<ac2_solr_url>/select?f.author_facet.facet.limit=6&f.department_facet.facet.limit=6&f.genre_facet.facet.limit=11&f.pub_date_sort.facet.limit=4&f.series_facet.facet.limit=11&f.subject_facet.facet.limit=11&facet=true&facet.field=series_facet&q=%7B!qf=$title_qf%20pf=$title_pf%7DStructural%20and%20Functional%20Microbial%20Ecology&qt=search&rows=25&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&spellcheck.q=Structural%20and%20Functional%20Microbial%20Ecology&stats=true&stats.field=pub_date_sort&wt=ruby"
    body:
      encoding: US-ASCII
      string: ''
    headers: {}
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Last-Modified:
      - Mon, 15 Aug 2016 18:45:58 GMT
      Etag:
      - '"MTFiZDRmMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - text/plain;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Tue, 16 Aug 2016 17:51:47 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eydyZXNwb25zZUhlYWRlcic9Pnsnc3RhdHVzJz0+MCwnUVRpbWUnPT40LCdw
        YXJhbXMnPT57J2ZhY2V0Jz0+J3RydWUnLCdzb3J0Jz0+J3Njb3JlIGRlc2Ms
        IHB1Yl9kYXRlX3NvcnQgZGVzYywgdGl0bGVfc29ydCBhc2MnLCdmLnNlcmll
        c19mYWNldC5mYWNldC5saW1pdCc9PicxMScsJ3N0YXRzJz0+J3RydWUnLCdz
        cGVsbGNoZWNrLnEnPT4nU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBNaWNy
        b2JpYWwgRWNvbG9neScsJ2YucHViX2RhdGVfc29ydC5mYWNldC5saW1pdCc9
        Pic0Jywnd3QnPT4ncnVieScsJ3Jvd3MnPT4nMjUnLCdzdGF0cy5maWVsZCc9
        PidwdWJfZGF0ZV9zb3J0JywncSc9Pid7IXFmPSR0aXRsZV9xZiBwZj0kdGl0
        bGVfcGZ9U3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBNaWNyb2JpYWwgRWNv
        bG9neScsJ2YuYXV0aG9yX2ZhY2V0LmZhY2V0LmxpbWl0Jz0+JzYnLCdmLmdl
        bnJlX2ZhY2V0LmZhY2V0LmxpbWl0Jz0+JzExJywnZmFjZXQuZmllbGQnPT5b
        J2F1dGhvcl9mYWNldCcsJ3B1Yl9kYXRlX3NvcnQnLCdkZXBhcnRtZW50X2Zh
        Y2V0Jywnc3ViamVjdF9mYWNldCcsJ2dlbnJlX2ZhY2V0Jywnc2VyaWVzX2Zh
        Y2V0J10sJ2Yuc3ViamVjdF9mYWNldC5mYWNldC5saW1pdCc9PicxMScsJ3F0
        Jz0+J3NlYXJjaCcsJ2YuZGVwYXJ0bWVudF9mYWNldC5mYWNldC5saW1pdCc9
        Pic2J319LCdyZXNwb25zZSc9PnsnbnVtRm91bmQnPT4yLCdzdGFydCc9PjAs
        J21heFNjb3JlJz0+MC4zMTc0NTQzNywnZG9jcyc9Plt7J2lkJz0+J2FjOjE2
        MTIyNScsJ3JlY29yZF9jcmVhdGlvbl9kYXRlJz0+JzIwMTEtMTEtMDlUMTY6
        NDQ6NDhaJywnbGFuZ3VhZ2UnPT4nRW5nbGlzaCcsJ2RhdGVfaXNzdWVkJz0+
        JzIwMTEnLCdoYW5kbGUnPT4naHR0cDovL2hkbC5oYW5kbGUubmV0LzEwMDIy
        L0FDOlA6MTE3ODUnLCd0aXRsZV9kaXNwbGF5Jz0+J1N0cnVjdHVyYWwgYW5k
        IEZ1bmN0aW9uYWwgTWljcm9iaWFsIEVjb2xvZ3kgb2YgRGVuaXRyaWZ5aW5n
        IEJhY3RlcmlhIFVzaW5nIERpZmZlcmVudCBPcmdhbmljIENhcmJvbiBTb3Vy
        Y2VzJywnYXV0aG9yX2luZm8nPT5bJ0x1LCBIdWlqaWUgOiAgOiBDb2x1bWJp
        YSBVbml2ZXJzaXR5LiBFYXJ0aCBhbmQgRW52aXJvbm1lbnRhbCBFbmdpbmVl
        cmluZyddLCdhdXRob3JfZmFjZXQnPT5bJ0x1LCBIdWlqaWUnXSwnYXV0aG9y
        X2Rpc3BsYXknPT4nTHUsIEh1aWppZScsJ3B1Yl9kYXRlX2ZhY2V0Jz0+Wycy
        MDExJ10sJ2dlbnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJ10sJ2Fic3Ry
        YWN0Jz0+J1RoaXMgZGlzc2VydGF0aW9uIHJlc2VhcmNoIHJlcHJlc2VudHMg
        b25lIG9mIHRoZSBmaXJzdCBhdHRlbXB0cyB0byBpbnZlc3RpZ2F0ZSB0aGUg
        c3RydWN0dXJhbCBhbmQgZnVuY3Rpb25hbCBtaWNyb2JpYWwgZWNvbG9neSBv
        ZiBtZXRoYW5vbCwgZXRoYW5vbCBhbmQgZ2x5Y2Vyb2wgZm9zdGVyZWQgZGVu
        aXRyaWZpY2F0aW9uLiBUaGUgb3ZlcmFyY2hpbmcgZ29hbCBvZiB0aGlzIHJl
        c2VhcmNoIHdhcyB0byBlbHVjaWRhdGUgdGhlIGxpbmsgYmV0d2VlbiB0aGUg
        c3RydWN0dXJlIGFuZCBmdW5jdGlvbiBvZiBkZW5pdHJpZnlpbmcgbWljcm9i
        aWFsIHBvcHVsYXRpb25zIGdyb3duIG9uIGRpZmZlcmVudCBjYXJib24gc291
        cmNlcy4gU3BlY2lmaWMgb2JqZWN0aXZlcyB3ZXJlIHRvOiAxKSBkaWFnbm9z
        ZSBiYWN0ZXJpYSBzcGVjaWZpY2FsbHkgYXNzaW1pbGF0aW5nIG1ldGhhbm9s
        IGFuZCBldGhhbm9sIGFuZCBkZXRlcm1pbmUgZGVuaXRyaWZpY2F0aW9uIGtp
        bmV0aWNzIGluZHVjZWQgYnkgdGhlIHR3byBjYXJib24gc291cmNlczsgMikg
        aW52ZXN0aWdhdGUgZmFjdG9ycyBsZWFkaW5nIHRvIG5pdHJvdXMgb3hpZGUg
        KE4yTykgYW5kIG5pdHJpYyBveGlkZSAoTk8pIGVtaXNzaW9ucyBmcm9tIG1l
        dGhhbm9sIGFuZCBldGhhbm9sIGZlZWRpbmcgZGVuaXRyaWZpY2F0aW9uIHJl
        YWN0b3JzOyAzKSBjaGFyYWN0ZXJpemUgZ2x5Y2Vyb2wgYXNzaW1pbGF0aW5n
        IHBvcHVsYXRpb25zIHRoYXQgcGVyZm9ybSBzdXNwZW5kZWQtIGFuZCBiaW9m
        aWxtLWdyb3d0aCBkZW5pdHJpZmljYXRpb247IDQpIGV4YW1pbmUgdGhlIHBv
        dGVudGlhbCBvZiB1c2luZyBhbGNvaG9sIGRlaHlkcm9nZW5hc2UgZ2VuZSBh
        cyBhIGJpb21hcmtlciBmb3IgbWV0aGFub2wgYW5kIGdseWNlcm9sIGluZHVj
        ZWQgZGVuaXRyaWZpY2F0aW9uIGFjdGl2aXR5OyA1KSBldmFsdWF0ZSB0aGUg
        aW1wYWN0IG9mIGRpZmZlcmVudCBjYXJib24gc291cmNlcyAobWV0aGFub2wg
        YW5kIGV0aGFub2wpIG9uIHRoZSB0cmFuc2NyaXB0IGFuZCBwcm90ZW9tZSBv
        ZiBhIG1vZGVsIGZhY3VsdGF0aXZlIG1ldGh5bG90cm9waCwgTWV0aHlsb3Zl
        cnNhdGlsaXMgdW5pdmVyc2FsaXMgRkFNNS4gRmlyc3QsIHRoZSB0ZWNobmlx
        dWUgb2YgRE5BIHN0YWJsZSBpc290b3BlIHByb2JpbmcgYW5kIHF1YW50aXRh
        dGl2ZSBwb2x5bWVyYXNlIGNoYWluIHJlYWN0aW9uIHdlcmUgYWRhcHRlZCB0
        byBkaWFnbm9zZSBhbmQgdHJhY2sgbWV0aHlsb3Ryb3BoaWMgZGVuaXRyaWZ5
        aW5nIGJhY3RlcmlhIGluIGFjdGl2YXRlZCBzbHVkZ2UuIE1ldGhhbm9sIGFz
        c2ltaWxhdGluZyBwb3B1bGF0aW9ucyBpbiB0aGUgbWV0aGFub2wgZmVkIGRl
        bml0cmlmeWluZyBzZXF1ZW5jaW5nIGJhdGNoIHJlYWN0b3IgKFNCUikgd2Vy
        ZSBNZXRoeWxvdmVyc2F0aWxpcyBzcHAuIGFuZCBIeXBob21pY3JvYml1bSBz
        cHAuIHJlbGF0ZWQgc3BlY2llcy4gVXBvbiBzd2l0Y2hpbmcgdG8gZXRoYW5v
        bCwgb25seSBNZXRoeWxvdmVyc2F0aWxpcyBzcHAuIHdhcyBzdXN0YWluZWQg
        cG9pbnRpbmcgdG8gdGhlaXIgbWV0YWJvbGljIHZlcnNhdGlsaXR5IGF0IGxl
        YXN0IHdpdGggcmVzcGVjdCB0byBjYXJib24gYXNzaW1pbGF0aW9uLiBUaGlz
        IHN0dWR5IHJlcHJlc2VudHMgb25lIG9mIHRoZSBmaXJzdCBpbnZlc3RpZ2F0
        aW9ucyBvZiB0aGUgZXhpc3RlbmNlIGFuZCB1dGlsaXphdGlvbiBvZiBmYWN1
        bHRhdGl2ZSBtZXRoeWxvdHJvcGh5IGluIGFjdGl2YXRlZCBzbHVkZ2UuIFNl
        Y29uZCwgdGhlIHBvdGVudGlhbCBvZiBOMk8gYW5kIE5PIGVtaXR0ZWQgZnJv
        bSBtZXRoYW5vbCBhbmQgZXRoYW5vbCBmZWQgZGVuaXRyaWZ5aW5nIFNCUnMg
        d2FzIHN0dWRpZWQgZHVyaW5nIGRpZmZlcmVudCB0cmFuc2llbnQgc2hvY2tz
        LCBpbmNsdWRpbmcgb3JnYW5pYyBjYXJib24gbGltaXRhdGlvbiwgbml0cml0
        ZSBpbmhpYml0aW9uIGFuZCBveHlnZW4gaW5oaWJpdGlvbi4gT3JnYW5pYyBj
        YXJib24gbGltaXRhdGlvbiBhbmQgZXhwb3N1cmUgdG8gbml0cml0ZSBkaWQg
        bm90IHJlc3VsdCBpbiBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGVtaXNz
        aW9ucyBvdmVyIHRoZSBjb250cm9sLiBIb3dldmVyLCBzdGF0aXN0aWNhbGx5
        IGhpZ2hlciBOMk8gZW1pc3Npb25zIHdlcmUgb2JzZXJ2ZWQgZHVyaW5nIGV4
        cG9zdXJlIHRvIG94eWdlbiBvbiB0aGUgZXRoYW5vbCBmZWQgYmlvbWFzcyBh
        bmQgY29pbmNpZGVkIHdpdGggc3VzdGFpbmVkIGRlbml0cmlmaWNhdGlvbiBh
        Y3Rpdml0eSBpbiB0aGUgcHJlc2VuY2Ugb2Ygb3h5Z2VuLiBUaGVyZWZvcmUs
        IHRoZSByZXN1bHRzIHN1Z2dlc3QgdGhhdCB0aGUgZG9zYWdlIG9mIGV0aGFu
        b2wgdG8gYW5veGljIHpvbmVzIG5lZWRzIHRvIGJlIHN0cmljdGx5IGNvbnRy
        b2xsZWQgdG8gbWluaW1pemUgTjJPIGVtaXNzaW9ucyBpbiB0aGUgZG93bnN0
        cmVhbSBhZXJvYmljIHpvbmVzLiBUaGlyZCwgdGhlIHN0cnVjdHVyZS1mdW5j
        dGlvbiBhbmFseXNpcyBvZiBkZW5pdHJpZmljYXRpb24gd2FzIGV4dGVuZGVk
        IHRvIGdseWNlcm9sICh0aGUgbWFpbiBjb21wb25lbnQgb2YgYmlvZGllc2Vs
        IHdhc3RlIGFuZCBhIHBvdGVudGlhbCByZXBsYWNlbWVudCBmb3IgbWV0aGFu
        b2wpIGluIGJvdGggc3VzcGVuZGVkIGFuZCBiaW9maWxtIHBoYXNlcyBvZiBh
        IGh5YnJpZCBpbnRlZ3JhdGVkIGZpeGVkLWZpbG0gYmlvcmVhY3Rvci4gRHVy
        aW5nIGxvbmctdGVybSBvcGVyYXRpb24gb24gZ2x5Y2Vyb2wsIHRoZSBiaW9m
        aWxtIGNvbW11bml0eSBoYWQgYSBoaWdoZXIgcGh5bG9nZW5ldGljIGRpdmVy
        c2l0eSAoZG9taW5hdGVkIGJ5IENvbWFtb25hcyBzcHAuLCBCcmFkeXJoaXpv
        Yml1bSBzcHAuLCBhbmQgVGVzc2FyYWNvY2N1cyBzcHAuKSwgYW5kIGxvd2Vy
        IGRlbml0cmlmaWNhdGlvbiBraW5ldGljcyB0aGFuIHRoZSBzdXNwZW5kZWQg
        Y29tbXVuaXR5IChkb21pbmF0ZWQgYnkgQ29tYW1vbmFzIHNwcC4gYW5kIERp
        YXBob3JvYmFjdGVyIHNwcC4pLiBEaXN0aW5jdCBpZGVudGl0aWVzIG9mIGds
        eWNlcm9sIGFzc2ltaWxhdGluZyBwb3B1bGF0aW9ucyBkdWUgdG8gdGhlIGRp
        ZmZlcmVudCBzdWJzdHJhdGUgYXZhaWxhYmlsaXR5IGluIHRoZSBzdXNwZW5k
        ZWQgYW5kIGJpb2ZpbG0gcGhhc2VzIHdlcmUgc2hvd24gZm9yIHRoZSBmaXJz
        dCB0aW1lLiBGb3VydGgsIGNhcmJvbiBzb3VyY2Utc3BlY2lmaWMgYmlvbWFy
        a2VycyBvZiBkZW5pdHJpZmljYXRpb24gYWN0aXZpdHkgYmFzZWQgb24gZ2Vu
        ZSBleHByZXNzaW9uIHdlcmUgZGV2ZWxvcGVkLiBCYXNlZCBvbiBzaG9ydC10
        ZXJtIGJhdGNoIGRlbml0cmlmaWNhdGlvbiBhY3Rpdml0eSBhc3NheXMgYXMg
        d2VsbCBhcyBsb25nLXRlcm0gYmlvcmVhY3RvciBvcGVyYXRpb24sIHRoZSBh
        cHBsaWNhYmlsaXR5IG9mIGFsY29ob2wgZGVoeWRyb2dlbmFzZSBnZW5lIGV4
        cHJlc3Npb24gYXMgcXVhbnRpdGF0aXZlIGRlc2NyaXB0b3JzIG9mIGRlbml0
        cmlmaWNhdGlvbiBhY3Rpdml0eSBvbiBtZXRoYW5vbCBhbmQgZ2x5Y2Vyb2wg
        aW4gbWl4ZWQgY3VsdHVyZXMgd2FzIGRlbW9uc3RyYXRlZC4gIEZpbmFsbHks
        IE1ldGh5bG92ZXJzYXRpbGlzIHVuaXZlcnNhbGlzIHdhcyBzZWxlY3RlZCBh
        cyBtb2RlbCBvcmdhbmlzbSB0byBzdHVkeSB0aGUgZWZmZWN0cyBvZiB2YXJ5
        aW5nIGVsZWN0cm9uIGRvbm9ycyAoZnJvbSBtZXRoYW5vbCB0byBldGhhbm9s
        KSBvbiBpdHMgZ2VuZSBhbmQgcHJvdGVpbiBleHByZXNzaW9uIHByb2ZpbGVz
        LiBHZW5lcyBlbmNvZGluZyBlc3NlbnRpYWwgZW56eW1lcyB0aGF0IGludm9s
        dmUgY2FyYm9uIG94aWRhdGlvbiwgQzEgYXNzaW1pbGF0aW9uIGFuZCBjZW50
        cmFsIG1ldGFib2xpc20gd2VyZSBmb3VuZCB0byBiZSBkaWZmZXJlbnRpYWxs
        eSBleHByZXNzZWQgZHVyaW5nIGdyb3d0aCBvbiBtZXRoYW5vbCBhbmQgZXRo
        YW5vbC4gU2V2ZXJhbCBwaHlzaW9sb2dpY2FsIGFuZCBtZXRhYm9saWMgcmVz
        cG9uc2VzIGJ5IE0uIHVuaXZlcnNhbGlzIHBvaW50ZWQgdG8gYSB3ZWxsLWRl
        ZmluZWQgc3RyYXRlZ3kgdG8gb3ZlcmNvbWUgY2FyYm9uIGxpbWl0YXRpb24g
        Zm9yIHN1cnZpdmluZyBpbiBlbmdpbmVlcmVkIG9yIG5hdHVyYWwgZGVuaXRy
        aWZ5aW5nIGVudmlyb25tZW50cy4gSW4gc3VtLCB0aGUgc3RydWN0dXJhbCBh
        bmQgZnVuY3Rpb25hbCBlY29sb2d5IGFuZCB0aGUgbWV0YWJvbGlzbSBvZiBo
        ZXRlcm90cm9waGljIGRlbml0cmlmaWNhdGlvbiBvbiBtZXRoYW5vbCwgZXRo
        YW5vbCBhbmQgZ2x5Y2Vyb2wgYXMgYXBwbGljYWJsZSB0byBlbmdpbmVlcmVk
        IGRlbml0cmlmeWluZyBiaW9yZWFjdG9ycyB3YXMgaW52ZXN0aWdhdGVkIGlu
        IGRldGFpbC4gRnJvbSBhbiBlbmdpbmVlcmluZyBwZXJzcGVjdGl2ZSwgdGhl
        IGtub3dsZWRnZSBnYWluZWQgY2FuIGhlbHAgdG8gZ3VpZGUgdGhlIHNlbGVj
        dGlvbiBhbmQgYXBwbGljYXRpb24gb2YgcG90ZW50aWFsIG9yZ2FuaWMgY2Fy
        Ym9uIHNvdXJjZXMgZm9yIGRlbml0cmlmaWNhdGlvbiBpbiBiaW9sb2dpY2Fs
        IG5pdHJvZ2VuIHJlbW92YWwgc3lzdGVtcy4gSXQgaXMgZXhwZWN0ZWQgdGhh
        dCBzdWNoIGp1ZGljaW91cyBzZWxlY3Rpb24gY2FuIGFsc28gZXZlbnR1YWxs
        eSByZXN1bHQgaW4gYmV0dGVyIGRlc2lnbiwgb3BlcmF0aW9uIGFuZCBjb250
        cm9sIG9mIGVuZ2luZWVyZWQgbml0cm9nZW4gcmVtb3ZhbCBwcm9jZXNzZXMg
        YW5kIHRodXMgaGVscCBhdHRhaW4gZXZlciBtb3JlIHN0cmluZ2VudCBuaXRy
        b2dlbiBzdGFuZGFyZHMuJywnc3ViamVjdF9mYWNldCc9PlsnRW52aXJvbm1l
        bnRhbCBlbmdpbmVlcmluZyddLCdub3Rlcyc9PlsnUGguRC4sIENvbHVtYmlh
        IFVuaXZlcnNpdHkuJ10sJ3R5cGVfb2ZfcmVzb3VyY2VfbW9kcyc9PlsndGV4
        dCddLCd0eXBlX29mX3Jlc291cmNlX2ZhY2V0Jz0+WydUZXh0J10sJ29yZ2Fu
        aXphdGlvbl9mYWNldCc9PlsnQ29sdW1iaWEgVW5pdmVyc2l0eSddLCdkZXBh
        cnRtZW50X2ZhY2V0Jz0+WydFYXJ0aCBhbmQgRW52aXJvbm1lbnRhbCBFbmdp
        bmVlcmluZyddLCdzY29yZSc9PjAuMzE3NDU0Mzd9LHsnaWQnPT4nYWM6MTk4
        MTEzJywncmVjb3JkX2NyZWF0aW9uX2RhdGUnPT4nMjAxNi0wNC0yOVQyMTox
        NDo0MVonLCdsYW5ndWFnZSc9PidFbmdsaXNoJywnZGF0ZV9pc3N1ZWQnPT4n
        MjAxNicsJ2hhbmRsZSc9PidodHRwOi8vZHguZG9pLm9yZy8xMC43OTE2L0Q4
        UVI0WDRNJywndGl0bGVfZGlzcGxheSc9PidNaWNyb2JpYWwgU3RydWN0dXJl
        IGFuZCBGdW5jdGlvbiBvZiBFbmdpbmVlcmVkIEJpb2xvZ2ljYWwgTml0cm9n
        ZW4gVHJhbnNmb3JtYXRpb24gUHJvY2Vzc2VzOiBJbXBhY3RzIG9mIEFlcmF0
        aW9uIGFuZCBPcmdhbmljIENhcmJvbiBvbiBQcm9jZXNzIFBlcmZvcm1hbmNl
        IGFuZCBFbWlzc2lvbnMgb2YgTml0cm9nZW5vdXMgR3JlZW5ob3VzZSBHYXMn
        LCdhdXRob3JfaW5mbyc9PlsnQnJvdHRvLCBBcmlhbmUgQ29lbGhvIDogYWNi
        MjE5OCA6IENvbHVtYmlhIFVuaXZlcnNpdHkuIEVhcnRoIGFuZCBFbnZpcm9u
        bWVudGFsIEVuZ2luZWVyaW5nJ10sJ2F1dGhvcl9mYWNldCc9PlsnQnJvdHRv
        LCBBcmlhbmUgQ29lbGhvJ10sJ2F1dGhvcl9kaXNwbGF5Jz0+J0Jyb3R0bywg
        QXJpYW5lIENvZWxobycsJ3B1Yl9kYXRlX2ZhY2V0Jz0+WycyMDE2J10sJ2dl
        bnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJ10sJ2Fic3RyYWN0Jz0+J1Ro
        aXMgZG9jdG9yYWwgcmVzZWFyY2ggcHJvdmlkZXMgYW4gYWR2YW5jZWQgbW9s
        ZWN1bGFyIGFwcHJvYWNoIGZvciB0aGUgaW52ZXN0aWdhdGlvbiBvZiBtaWNy
        b2JpYWwgc3RydWN0dXJlIGFuZCBmdW5jdGlvbiBpbiByZXNwb25zZSB0byBv
        cGVyYXRpb25hbCBjb25kaXRpb25zIG9mIGJpb2xvZ2ljYWwgbml0cm9nZW4g
        cmVtb3ZhbCAoQk5SKSBwcm9jZXNzZXMsIGluY2x1ZGluZyB0aG9zZSBsZWFk
        aW5nIHRvIGRpcmVjdCBwcm9kdWN0aW9uIG9mIGEgbWFqb3IgZ3JlZW5ob3Vz
        ZSBnYXMsIG5pdHJvdXMgb3hpZGUgKE7igoJPKS4gVGhlIHdhc3Rld2F0ZXIg
        dHJlYXRtZW50IHNlY3RvciBpcyBlc3RpbWF0ZWQgdG8gYWNjb3VudCB3aXRo
        IDMlIG9mIHRvdGFsIGFudGhyb3BvZ2VuaWMgTuKCgk8gZW1pc3Npb25zLiBO
        ZXZlcnRoZWxlc3MsIHRoZSBjb250cmlidXRpb24gZnJvbSB3YXN0ZXdhdGVy
        IHRyZWF0bWVudCBwbGFudHMgKFdXVFBzKSBpcyBjb25zaWRlcmVkIHVuZGVy
        ZXN0aW1hdGVkIGR1ZSB0byBzZXZlcmFsIGxpbWl0YXRpb25zIG9uIHRoZSBl
        c3RpbWF0aW9uIG1ldGhvZG9sb2d5IGFwcHJvYWNoIHN1Z2dlc3RlZCBieSB0
        aGUgSW50ZXJnb3Zlcm5tZW50YWwgUGFuZWwgb24gQ2xpbWF0ZSBDaGFuZ2Ug
        KElQQ0MpLiBBbHRob3VnaCBmb3IgdGhlIHBhc3QgeWVhcnMgZWZmb3J0cyBo
        YXZlIGJlZW4gbWFkZSB0byBjaGFyYWN0ZXJpemUgdGhlIHByb2R1Y3Rpb24g
        b2YgTuKCgk8gZnJvbSB0aGVzZSBzeXN0ZW1zLCB0aGVyZSBhcmUgc3RpbGwg
        c2V2ZXJhbCBsaW1pdGF0aW9ucyBvbiBmdW5kYW1lbnRhbCBrbm93bGVkZ2Ug
        YW5kIG9wZXJhdGlvbmFsIGFwcGxpY2F0aW9ucy4gVGhvc2UgaW5jbHVkZSBs
        YWNrIG9mIGluZm9ybWF0aW9uIG9mIE7igoJPIHByb2R1Y3Rpb24gcGF0aHdh
        eXMgYXNzb2NpYXRlZCB3aXRoIGNvbnRyb2wgb2YgYWVyYXRpb24sIHN1cHBs
        ZW1lbnRhbCBvcmdhbmljIGNhcmJvbiBzb3VyY2VzIGFuZCBhZGFwdGF0aW9u
        IG9mIHRoZSBtaWNyb2JpYWwgY29tbXVuaXR5IHRvIHRoZSByZXBlYXRlZCBv
        cGVyYXRpb25hbCBjb25kaXRpb25zLCBhbW9uZyBvdGhlcnMuIFRoZSBjb21w
        b25lbnRzIG9mIHRoaXMgdGhlc2lzLCBsYWItc2NhbGUgaW52ZXN0aWdhdGlv
        bnMgYW5kIGZ1bGwtc2NhbGUgbW9uaXRvcmluZyBvZiBO4oKCTyBwcm9kdWN0
        aW9uIHBhdGh3YXlzIGFuZCBlbWlzc2lvbnMgaW4gY29uanVuY3Rpb24gd2l0
        aCBtZXRhLW9taWNzIGFwcHJvYWNoLCBoYXZlIGEgY29tYmluZWQgcm9sZSBp
        biBhZGRyZXNzaW5nIHN1Y2ggbGltaXRhdGlvbnMuCiAgICAgIExhYi1zY2Fs
        ZSBleHBlcmltZW50cyBpbXBvc2luZyBzaG9ydC10ZXJtIGFub3hpYy1hZXJv
        YmljIGN5Y2xpbmcgb24gcGFydGlhbC0gYW5kIGZ1bGwtbml0cmlmaWNhdGlv
        biBiYXNlZCBwcm9jZXNzZXMgd2VyZSBjb25kdWN0ZWQgdG8gaW52ZXN0aWdh
        dGUgdGhlIG1pY3JvYmlhbCByZXNwb25zZSB0byBO4oKCTyBwcm9kdWN0aW9u
        LiBJbnRlcmVzdGluZ2x5LCBpdCB3YXMgZGV0ZXJtaW5lZCB0aGF0IGZ1bGwt
        bml0cmlmaWNhdGlvbiBzeXN0ZW1zIGNvdWxkIGJlIGEgaGlnaGVyIGNvbnRy
        aWJ1dG9yIHRvIE7igoJPIHByb2R1Y3Rpb24gYW5kIGVtaXNzaW9ucyB0aGFu
        IHBhcnRpYWwtbml0cmlmaWNhdGlvbi4gV2hpbGUgaXQgaGFzIGJlZW4gcmVw
        b3J0ZWQgaW4gdGhlIGxpdGVyYXR1cmUgYSBoaWdoZXIgY29udHJpYnV0aW9u
        IGZyb20gdGhlIGxhdHRlciB3aGVuIHRoZSBtaWNyb2JpYWwgY29tbXVuaXR5
        IGlzIG5vdCBzdWJqZWN0ZWQgdG8gb3h5Z2VuIGN5Y2xpbmcgY29uZGl0aW9u
        cy4gRm9sbG93aW5nIHRoZSBrbm93bGVkZ2Ugb2J0YWluZWQgd2l0aCBhIHNp
        bmdsZSBhbm94aWMtYWVyb2JpYyBjeWNsZSBpbXBvc2VkIHRvIG5pdHJpZnlp
        bmcgY29tbXVuaXRpZXMsIGxvbmctdGVybSBhZGFwdGF0aW9uIG9mIHRoZSBt
        aWNyb2JpYWwgY29tbXVuaXR5IHRvIGNvbnRpbnVlZCBhbm94aWMtYWVyb2Jp
        YyBjeWNsaW5nIGFuZCBpdHMgaW1wYWN0IG9uIE7igoJPIHByb2R1Y3Rpb24g
        d2VyZSBpbnZlc3RpZ2F0ZWQgdGhyb3VnaCBhIG1ldGEtb21pY3MgYXBwcm9h
        Y2guIExvbmctdGVybSBzdHVkaWVzIGFyZSBwYXJ0aWN1bGFybHkgc2lnbmlm
        aWNhbnQgcmVnYXJkaW5nIGVuZ2luZWVyZWQgc3lzdGVtcywgd2hlcmUgdGhl
        IG1pY3Jvb3JnYW5pc21zIGFyZSBjb250aW51YWxseSBzdWJqZWN0ZWQgdG8g
        Y3ljbGluZyBjb25kaXRpb25zIGFnYWluIGFuZCBhZ2Fpbi4gQSBtaWNyb2Jp
        YWwgYWRhcHRhdGlvbiBhdCB0aGUgUk5BIGxldmVsIHdhcyBpZGVudGlmaWVk
        IG9uIGJvdGggYXV0b3Ryb3BoIGFuZCBoZXRlcm90cm9waCBvcmdhbmlzbXMu
        IFRoZSB0cmFuc2NyaXB0cyBvZiB0aGUgbWV0YWJvbGljIHBhdGh3YXlzIHJl
        bGF0ZWQgdG8gTk8gYW5kIE7igoJPIHByb2R1Y3Rpb24gKG5pciwgbm9yKSBh
        bmQgY29uc3VtcHRpb24gKG5vciwgbm9zKSB3ZXJlIGluaXRpYWxseSBpbmR1
        Y2VkIGZvbGxvd2VkIGJ5IGEgZ3JhZHVhbCBkZWNsaW5lLCBsZWFkaW5nIHRv
        IGEgcGFyYWxsZWwgcmVkdWN0aW9uIGluIGdhc2VvdXMgZW1pc3Npb25zIG92
        ZXIgdGltZS4gT3RoZXIgcGF0aHdheXMgbm90IHR5cGljYWxseSBpbnRlcnJv
        Z2F0ZWQgaW4gY29uanVuY3Rpb24gd2l0aCB0aGUgbml0cm9nZW4gbWV0YWJv
        bGlzbSwgc3VjaCBhcyBlbGVjdHJvbiB0cmFuc3BvcnQgY2hhaW4gYW5kIGNh
        cmJvbiBmaXhhdGlvbiB3ZXJlIGFsc28gaW52ZXN0aWdhdGVkIGFuZCByZXZl
        YWxlZCBhIG1lY2hhbmlzbSB0byBvdmVyY29tZSB0aGUgaW1iYWxhbmNlIGlu
        IGVsZWN0cm9uIGZsb3cgYW5kIGdlbmVyYXRpb24gb2YgcHJvdG9uIG1vdGl2
        ZSBmb3JjZSAoaW5jcmVhc2VkIHRyYW5zY3JpcHRpb24gb2YgdGVybWluYWwg
        b3hpZGFzZSBnZW5lcywgY2NvIGFuZCBjb3gpIHRvIHVwaG9sZCBjYXJib24g
        Zml4YXRpb24gZHVyaW5nIGNvbnRpbnVlZCBjeWNsaW5nLgogICAgICBUaGUg
        c2Vjb25kIHBhcnQgb2YgdGhpcyB0aGVzaXMgZm9jdXNlcyBvbiBmdWxsLXNj
        YWxlIFdXVFBzLCB3aGVyZSBpdCBpcyBjcnVjaWFsIHRvIGRldGVybWluZSBz
        cGVjaWZpYyBudWFuY2VzIG9mIHRoZSBzeXN0ZW1z4oCZIGR5bmFtaWNzIGFu
        ZCBvZiB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIHRyZWF0bWVudCB0aGF0IG1h
        eSBjb250cmlidXRlIHRvIGluY3JlYXNlZCBwcm9kdWN0aW9uIGFuZCBlbWlz
        c2lvbnMgb2YgTuKCgk8uIEZvciB0aGF0IHB1cnBvc2UsIHR3byBkaXN0aW5j
        dCBCTlIgc3lzdGVtcyBub3QgdXN1YWxseSBjb25zaWRlcmVkIGFuZCBzdHVk
        aWVkIGluIHRlcm1zIG9mIE7igoJPIHByb2R1Y3Rpb24gYW5kIGVtaXNzaW9u
        cyB3ZXJlIGNob3Nlbi4gRmlyc3QsIGEgc2VwYXJhdGUgY2VudHJhdGUgdHJl
        YXRtZW50IChTQ1QpIHByb2Nlc3MgZW1wbG95aW5nIGdseWNlcm9sIGFzIHRo
        ZSBzdXBwbGVtZW50YWwgY2FyYm9uIHNvdXJjZSB3YXMgbW9uaXRvcmVkLiBT
        aWduaWZpY2FudGx5LCB0aGlzIHN5c3RlbSB3YXMgZm91bmQgdG8gaGF2ZSBv
        bmUgb2YgdGhlIGhpZ2hlc3QgbGV2ZWxzIG9mIE7igoJPIHByb2R1Y3Rpb24g
        YW5kIGVtaXNzaW9uIHJlcG9ydCB0aHVzIGZhci4gR2x5Y2Vyb2wgcmV2ZWFs
        ZWQgdG8gZm9zdGVyIGEgbWljcm9iaWFsIGNvbW11bml0eSAoaS5lLiBCdXJr
        aG9sZGVyaWFsZXMsIFJob2RvYmFjdGVyYWxlcyBhbmQgU3BoaW5nb21vbmFk
        YWxlcykgdGhhdCBzdG9yZXMgaW50ZXJuYWwgY2FyYm9uIGFuZCBwcm9tb3Rl
        IHBhcnRpYWwgZGVuaXRyaWZpY2F0aW9uLCBsZWFkaW5nIHRvIGFjY3VtdWxh
        dGlvbiBvZiBuaXRyaXRlIGFuZCBO4oKCTyBbNy0xMV0uIFNlY29uZCwgYm90
        aCBmaXhlZC0gYW5kIG1vdmluZy1iZWQgYmlvZmlsbSBCTlIgc3lzdGVtcyB3
        ZXJlIGludmVzdGlnYXRlZC4gVGhlIG92ZXJhbGwgTuKCgk8gZW1pc3Npb24g
        ZnJhY3Rpb25zIGZvciB0aGUgSW50ZWdyYXRlZCBGaXhlZC1GaWxtIEFjdGl2
        YXRlZCBTbHVkZ2UgKElGQVMpKDAuMDkg4oCTIDEuMSUgaW5mbC1US04pIGFu
        ZCBkZW5pdHJpZmljYXRpb24gZmlsdGVycyAoMC4xMSDigJMgMS40JSBpbmZs
        LVROKSB3ZXJlIHNpbWlsYXIgdG8gdGhlIHJlcG9ydGVkIGVtaXNzaW9ucyBm
        cm9tIHN1c3BlbmRlZCBncm93dGggYWN0aXZhdGVkIHNsdWRnZSBzeXN0ZW1z
        IFs0LTZdLiBGb3IgdGhlIElGQVMgc3lzdGVtLCBhcXVlb3VzIGFuZCBnYXNl
        b3VzIE7igoJPIHByb2ZpbGVzIHBhcmFsbGVsZWQgdGhlIGRpdXJuYWwgdmFy
        aWFiaWxpdHkgb24gaW5mbHVlbnQgbml0cm9nZW4gbG9hZC4gVGhlIHByb2R1
        Y3Rpb24gb2YgTuKCgk8gd2FzIHNpZ25pZmljYW50bHkgY29ycmVsYXRlZCB3
        aXRoIGFtbW9uaWEgY29uY2VudHJhdGlvbiAocDwwLjA1LCByPTAuOTEpLCBz
        dWdnZXN0aW5nIHRoZSBwcm9kdWN0aW9uIHRocm91Z2ggaHlkcm94eWxhbWlu
        ZSBveGlkYXRpb24gcGF0aHdheS4gRGVuaXRyaWZpY2F0aW9uIGZpbHRlcnMg
        ZGlzcGxheWVkIGEgdmVyeSBwZWN1bGlhciBwYXR0ZXJuIG9uIE7igoJPIGVt
        aXNzaW9ucyBhc3NvY2lhdGVkIHdpdGggaW50ZXJtaXR0ZW50IG9wZXJhdGlv
        bmFsIGN5Y2xlcyAoaS5lLiBuaXRyb2dlbiByZWxlYXNlIGN5Y2xlIGFuZCBi
        YWNrd2FzaCkuIFRoZXNlIGludHJpbnNpYyBvcGVyYXRpb25zIG9mIHRoZSBk
        ZW5pdHJpZmljYXRpb24gZmlsdGVycyBjb250cmlidXRlZCB0byB0cmFuc2ll
        bnQgb3h5Z2VuIGNvbmRpdGlvbnMgYW5kIG5lYXJseSB0aGUgZW50aXJlIE7i
        goJPIGVtaXNzaW9ucyB0aHJvdWdoIGdhc2VvdXMgc3RyaXBwaW5nIGFuZCBw
        cm9kdWN0aW9uIGJ5IGluaGliaXRpb24gb2YgZGVuaXRyaWZpY2F0aW9uLiBT
        aW1pbGFybHkgdG8gc3VzcGVuZGVkIGdyb3d0aCBzeXN0ZW1zLCBwcm9jZXNz
        IGRlc2lnbiBhbmQgb3BlcmF0aW9ucyBkZW1vbnN0cmF0ZWQgdG8gYWxzbyBw
        bGF5IGFuIGltcG9ydGFudCByb2xlIGluIE7igoJPIGVtaXNzaW9ucyBmcm9t
        IGF0dGFjaGVkIGdyb3d0aCBwcm9jZXNzZXMuCiAgICAgIEZpbmFsbHksIGFl
        cmF0aW9uIHN0cmF0ZWdpZXMgZm9yIGVuZXJneSBlZmZpY2llbnQgY29udmVu
        dGlvbmFsIG5pdHJpZmljYXRpb24gYmFzZWQgb24gdGhlIG1pY3JvYmlhbCBj
        b21tdW5pdHkgZGV2ZWxvcG1lbnQgYW5kIGl0cyBhc3NvY2lhdGVkIHBlcmZv
        cm1hbmNlIHdhcyBpbnZlc3RpZ2F0ZWQgaW4gbGFiLXNjYWxlLiBJdCB3YXMg
        ZGVtb25zdHJhdGVkIHRoYXQgdXNpbmcgdGhlIHNhbWUgYWlyIHN1cHBseSBy
        YXRlLCBjb250aW51b3VzIGFuZCBpbnRlcm1pdHRlbnQgYWVyYXRpb24gcmVz
        dWx0ZWQgaW4gY29tcGxldGVseSBkaWZmZXJlbnQgbWljcm9iaWFsIHN0cnVj
        dHVyZS4gQ29uc2VxdWVudGx5LCBkaXN0aW5jdCBraW5ldGljcyBhbmQgbml0
        cmlmaWNhdGlvbiBwZXJmb3JtYW5jZSB3ZXJlIG9ic2VydmVkLiBUaGUgYWVy
        YXRpb24gcmF0ZSBjb3VsZCBiZSBtaW5pbWl6ZWQgKHJlc3VsdGluZyBpbiBy
        ZWR1Y3Rpb24gaW4gZW5lcmd5IGNvbnN1bXB0aW9uKSBmb3IgaGlnaCBhbW1v
        bmlhIHJlbW92YWwgZWZmaWNpZW5jeSBhbmQgbG93ZXIgTuKCgk8gZW1pc3Np
        b25zLCBhcyBsb25nIGFzIHRoZSBwcm9jZXNzIGlzIGRlc2lnbmVkIGFjY29y
        ZGluZ2x5IHRvIHRoZSBtaWNyb2JpYWwgZWNvbG9neSBkZXZlbG9wZWQgaW4g
        c3VjaCBjb25kaXRpb25zLiAKICAgICAgSW4gc3VtLCB0aGUgbWljcm9iaWFs
        IHN0cnVjdHVyZSwgZnVuY3Rpb24gYW5kIGNvbm5lY3Rpb24gb2YgbWV0YWJv
        bGljIHBhdGh3YXlzIG9mIGNvbXBsZXggZW5naW5lZXJlZCBtaWNyb2JpYWwg
        Y29tbXVuaXRpZXMgYXMgYXBwbGljYWJsZSB0byBCTlIgc3lzdGVtcyBhbmQg
        aXRzIG9wZXJhdGlvbnMgd2VyZSBpbnZlc3RpZ2F0ZWQgaW4gZGV0YWlsLiBG
        cm9tIGFuIGVuZ2luZWVyaW5nIHBlcnNwZWN0aXZlLCB0aGlzIGRpc3NlcnRh
        dGlvbiBwcm92aWRlcyBhbiBhZHZhbmNlbWVudCBvbiB0aGUgbW9sZWN1bGFy
        IGFwcHJvYWNoIHRvIGNoYXJhY3Rlcml6ZSBzdHJ1Y3R1cmUgYW5kIGZ1bmN0
        aW9uIG9mIG1pY3JvYmlhbCByZXNwb25zZXMgdG8gZW5naW5lZXJlZCBvcGVy
        YXRpb25zIGJleW9uZCB0aGUgYnVzaW5lc3MtYXMtdXN1YWwgdGFyZ2V0IGdl
        bmVzLCB3aGljaCBjYW4gZXZlbnR1YWxseSByZXN1bHQgaW4gYmV0dGVyIGRl
        c2lnbiBhbmQgY29udHJvbCBvZiBlbmdpbmVlcmVkIEJOUiBwcm9jZXNzZXMu
        IFRoaXMgc3R1ZHkgb2ZmZXJzIG1vcmUgdGhhbiBhbiBpbXByb3ZlZCBzY2ll
        bnRpZmljIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNvbXBsZXggbWljcm9iaWFs
        IGVudmlyb25tZW50IGFuZCBkaXJlY3QgZW5naW5lZXJpbmcgYXBwbGljYXRp
        b25zLiBJdCBjb25uZWN0cyBzYW5pdGF0aW9uIHdpdGggd2F0ZXIgcXVhbGl0
        eSBhbmQgdGhlIGdyZWVuaG91c2UgZ2FzIGVmZmVjdCBieSBwcmlvcml0aXpp
        bmcgY29uY3VycmVudCBlbmhhbmNlZCBiaW9sb2dpY2FsIG5pdHJvZ2VuIHJl
        bW92YWwgYW5kIG1pdGlnYXRpb24gb2YgTuKCgk8gcHJvZHVjdGlvbiBhbmQg
        ZW1pc3Npb24uIFVsdGltYXRlbHkgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGUg
        cmVzdWx0IHByZXNlbnRlZCBoZXJlaW4gY2FuIHByb3ZpZGUgZWNvbm9taWNh
        bCwgZW52aXJvbm1lbnRhbCwgaGVhbHRoIGJlbmVmaXRzIGZvciB0aGUgc29j
        aWV0eS4nLCdzdWJqZWN0X2ZhY2V0Jz0+WydFbnZpcm9ubWVudGFsIGVuZ2lu
        ZWVyaW5nJywnTWljcm9iaW9sb2d5J10sJ25vdGVzJz0+WydQaC5ELiwgQ29s
        dW1iaWEgVW5pdmVyc2l0eS4nXSwndHlwZV9vZl9yZXNvdXJjZV9tb2RzJz0+
        Wyd0ZXh0J10sJ3R5cGVfb2ZfcmVzb3VyY2VfZmFjZXQnPT5bJ1RleHQnXSwn
        b3JnYW5pemF0aW9uX2ZhY2V0Jz0+WydDb2x1bWJpYSBVbml2ZXJzaXR5J10s
        J2RlcGFydG1lbnRfZmFjZXQnPT5bJ0VhcnRoIGFuZCBFbnZpcm9ubWVudGFs
        IEVuZ2luZWVyaW5nJ10sJ3Njb3JlJz0+MC4wMDMyMTU1NTA3fV19LCdmYWNl
        dF9jb3VudHMnPT57J2ZhY2V0X3F1ZXJpZXMnPT57fSwnZmFjZXRfZmllbGRz
        Jz0+eydhdXRob3JfZmFjZXQnPT5bJ0Jyb3R0bywgQXJpYW5lIENvZWxobycs
        MSwnTHUsIEh1aWppZScsMV0sJ3B1Yl9kYXRlX3NvcnQnPT5bJzIwMTEnLDEs
        JzIwMTYnLDFdLCdkZXBhcnRtZW50X2ZhY2V0Jz0+WydFYXJ0aCBhbmQgRW52
        aXJvbm1lbnRhbCBFbmdpbmVlcmluZycsMl0sJ3N1YmplY3RfZmFjZXQnPT5b
        J0Vudmlyb25tZW50YWwgZW5naW5lZXJpbmcnLDIsJ01pY3JvYmlvbG9neScs
        MV0sJ2dlbnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJywyXSwnc2VyaWVz
        X2ZhY2V0Jz0+W119LCdmYWNldF9kYXRlcyc9Pnt9LCdmYWNldF9yYW5nZXMn
        PT57fX0sJ3N0YXRzJz0+eydzdGF0c19maWVsZHMnPT57J3B1Yl9kYXRlX3Nv
        cnQnPT57J21pbic9PjIwMTEuMCwnbWF4Jz0+MjAxNi4wLCdjb3VudCc9PjIs
        J21pc3NpbmcnPT4wLCdzdW0nPT40MDI3LjAsJ3N1bU9mU3F1YXJlcyc9Pjgx
        MDgzNzcuMCwnbWVhbic9PjIwMTMuNSwnc3RkZGV2Jz0+My41MzU1MzM5MDU5
        MzI3Mzc4LCdmYWNldHMnPT57fX19fSwnc3BlbGxjaGVjayc9Pnsnc3VnZ2Vz
        dGlvbnMnPT5bJ2NvcnJlY3RseVNwZWxsZWQnLHRydWVdfX0K
    http_version: 
  recorded_at: Tue, 16 Aug 2016 17:51:48 GMT
- request:
    method: get
    uri: "<ac2_solr_url>/select?f.author_facet.facet.limit=6&f.department_facet.facet.limit=6&f.genre_facet.facet.limit=11&f.pub_date_sort.facet.limit=4&f.series_facet.facet.limit=11&f.subject_facet.facet.limit=11&facet=true&facet.field=series_facet&q=%7B!qf=$title_qf%20pf=$title_pf%7DStructural%20and%20Functional%20Microbial%20Ecology&qt=search&rows=25&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&spellcheck.q=Structural%20and%20Functional%20Microbial%20Ecology&stats=true&stats.field=pub_date_sort&wt=ruby"
    body:
      encoding: US-ASCII
      string: ''
    headers: {}
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Last-Modified:
      - Mon, 15 Aug 2016 18:45:58 GMT
      Etag:
      - '"MTFiZDRmMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - text/plain;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Date:
      - Tue, 16 Aug 2016 17:51:47 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eydyZXNwb25zZUhlYWRlcic9Pnsnc3RhdHVzJz0+MCwnUVRpbWUnPT4xLCdw
        YXJhbXMnPT57J2ZhY2V0Jz0+J3RydWUnLCdzb3J0Jz0+J3Njb3JlIGRlc2Ms
        IHB1Yl9kYXRlX3NvcnQgZGVzYywgdGl0bGVfc29ydCBhc2MnLCdmLnNlcmll
        c19mYWNldC5mYWNldC5saW1pdCc9PicxMScsJ3N0YXRzJz0+J3RydWUnLCdz
        cGVsbGNoZWNrLnEnPT4nU3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBNaWNy
        b2JpYWwgRWNvbG9neScsJ2YucHViX2RhdGVfc29ydC5mYWNldC5saW1pdCc9
        Pic0Jywnd3QnPT4ncnVieScsJ3Jvd3MnPT4nMjUnLCdzdGF0cy5maWVsZCc9
        PidwdWJfZGF0ZV9zb3J0JywncSc9Pid7IXFmPSR0aXRsZV9xZiBwZj0kdGl0
        bGVfcGZ9U3RydWN0dXJhbCBhbmQgRnVuY3Rpb25hbCBNaWNyb2JpYWwgRWNv
        bG9neScsJ2YuYXV0aG9yX2ZhY2V0LmZhY2V0LmxpbWl0Jz0+JzYnLCdmLmdl
        bnJlX2ZhY2V0LmZhY2V0LmxpbWl0Jz0+JzExJywnZmFjZXQuZmllbGQnPT5b
        J2F1dGhvcl9mYWNldCcsJ3B1Yl9kYXRlX3NvcnQnLCdkZXBhcnRtZW50X2Zh
        Y2V0Jywnc3ViamVjdF9mYWNldCcsJ2dlbnJlX2ZhY2V0Jywnc2VyaWVzX2Zh
        Y2V0J10sJ2Yuc3ViamVjdF9mYWNldC5mYWNldC5saW1pdCc9PicxMScsJ3F0
        Jz0+J3NlYXJjaCcsJ2YuZGVwYXJ0bWVudF9mYWNldC5mYWNldC5saW1pdCc9
        Pic2J319LCdyZXNwb25zZSc9PnsnbnVtRm91bmQnPT4yLCdzdGFydCc9PjAs
        J21heFNjb3JlJz0+MC4zMTc0NTQzNywnZG9jcyc9Plt7J2lkJz0+J2FjOjE2
        MTIyNScsJ3JlY29yZF9jcmVhdGlvbl9kYXRlJz0+JzIwMTEtMTEtMDlUMTY6
        NDQ6NDhaJywnbGFuZ3VhZ2UnPT4nRW5nbGlzaCcsJ2RhdGVfaXNzdWVkJz0+
        JzIwMTEnLCdoYW5kbGUnPT4naHR0cDovL2hkbC5oYW5kbGUubmV0LzEwMDIy
        L0FDOlA6MTE3ODUnLCd0aXRsZV9kaXNwbGF5Jz0+J1N0cnVjdHVyYWwgYW5k
        IEZ1bmN0aW9uYWwgTWljcm9iaWFsIEVjb2xvZ3kgb2YgRGVuaXRyaWZ5aW5n
        IEJhY3RlcmlhIFVzaW5nIERpZmZlcmVudCBPcmdhbmljIENhcmJvbiBTb3Vy
        Y2VzJywnYXV0aG9yX2luZm8nPT5bJ0x1LCBIdWlqaWUgOiAgOiBDb2x1bWJp
        YSBVbml2ZXJzaXR5LiBFYXJ0aCBhbmQgRW52aXJvbm1lbnRhbCBFbmdpbmVl
        cmluZyddLCdhdXRob3JfZmFjZXQnPT5bJ0x1LCBIdWlqaWUnXSwnYXV0aG9y
        X2Rpc3BsYXknPT4nTHUsIEh1aWppZScsJ3B1Yl9kYXRlX2ZhY2V0Jz0+Wycy
        MDExJ10sJ2dlbnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJ10sJ2Fic3Ry
        YWN0Jz0+J1RoaXMgZGlzc2VydGF0aW9uIHJlc2VhcmNoIHJlcHJlc2VudHMg
        b25lIG9mIHRoZSBmaXJzdCBhdHRlbXB0cyB0byBpbnZlc3RpZ2F0ZSB0aGUg
        c3RydWN0dXJhbCBhbmQgZnVuY3Rpb25hbCBtaWNyb2JpYWwgZWNvbG9neSBv
        ZiBtZXRoYW5vbCwgZXRoYW5vbCBhbmQgZ2x5Y2Vyb2wgZm9zdGVyZWQgZGVu
        aXRyaWZpY2F0aW9uLiBUaGUgb3ZlcmFyY2hpbmcgZ29hbCBvZiB0aGlzIHJl
        c2VhcmNoIHdhcyB0byBlbHVjaWRhdGUgdGhlIGxpbmsgYmV0d2VlbiB0aGUg
        c3RydWN0dXJlIGFuZCBmdW5jdGlvbiBvZiBkZW5pdHJpZnlpbmcgbWljcm9i
        aWFsIHBvcHVsYXRpb25zIGdyb3duIG9uIGRpZmZlcmVudCBjYXJib24gc291
        cmNlcy4gU3BlY2lmaWMgb2JqZWN0aXZlcyB3ZXJlIHRvOiAxKSBkaWFnbm9z
        ZSBiYWN0ZXJpYSBzcGVjaWZpY2FsbHkgYXNzaW1pbGF0aW5nIG1ldGhhbm9s
        IGFuZCBldGhhbm9sIGFuZCBkZXRlcm1pbmUgZGVuaXRyaWZpY2F0aW9uIGtp
        bmV0aWNzIGluZHVjZWQgYnkgdGhlIHR3byBjYXJib24gc291cmNlczsgMikg
        aW52ZXN0aWdhdGUgZmFjdG9ycyBsZWFkaW5nIHRvIG5pdHJvdXMgb3hpZGUg
        KE4yTykgYW5kIG5pdHJpYyBveGlkZSAoTk8pIGVtaXNzaW9ucyBmcm9tIG1l
        dGhhbm9sIGFuZCBldGhhbm9sIGZlZWRpbmcgZGVuaXRyaWZpY2F0aW9uIHJl
        YWN0b3JzOyAzKSBjaGFyYWN0ZXJpemUgZ2x5Y2Vyb2wgYXNzaW1pbGF0aW5n
        IHBvcHVsYXRpb25zIHRoYXQgcGVyZm9ybSBzdXNwZW5kZWQtIGFuZCBiaW9m
        aWxtLWdyb3d0aCBkZW5pdHJpZmljYXRpb247IDQpIGV4YW1pbmUgdGhlIHBv
        dGVudGlhbCBvZiB1c2luZyBhbGNvaG9sIGRlaHlkcm9nZW5hc2UgZ2VuZSBh
        cyBhIGJpb21hcmtlciBmb3IgbWV0aGFub2wgYW5kIGdseWNlcm9sIGluZHVj
        ZWQgZGVuaXRyaWZpY2F0aW9uIGFjdGl2aXR5OyA1KSBldmFsdWF0ZSB0aGUg
        aW1wYWN0IG9mIGRpZmZlcmVudCBjYXJib24gc291cmNlcyAobWV0aGFub2wg
        YW5kIGV0aGFub2wpIG9uIHRoZSB0cmFuc2NyaXB0IGFuZCBwcm90ZW9tZSBv
        ZiBhIG1vZGVsIGZhY3VsdGF0aXZlIG1ldGh5bG90cm9waCwgTWV0aHlsb3Zl
        cnNhdGlsaXMgdW5pdmVyc2FsaXMgRkFNNS4gRmlyc3QsIHRoZSB0ZWNobmlx
        dWUgb2YgRE5BIHN0YWJsZSBpc290b3BlIHByb2JpbmcgYW5kIHF1YW50aXRh
        dGl2ZSBwb2x5bWVyYXNlIGNoYWluIHJlYWN0aW9uIHdlcmUgYWRhcHRlZCB0
        byBkaWFnbm9zZSBhbmQgdHJhY2sgbWV0aHlsb3Ryb3BoaWMgZGVuaXRyaWZ5
        aW5nIGJhY3RlcmlhIGluIGFjdGl2YXRlZCBzbHVkZ2UuIE1ldGhhbm9sIGFz
        c2ltaWxhdGluZyBwb3B1bGF0aW9ucyBpbiB0aGUgbWV0aGFub2wgZmVkIGRl
        bml0cmlmeWluZyBzZXF1ZW5jaW5nIGJhdGNoIHJlYWN0b3IgKFNCUikgd2Vy
        ZSBNZXRoeWxvdmVyc2F0aWxpcyBzcHAuIGFuZCBIeXBob21pY3JvYml1bSBz
        cHAuIHJlbGF0ZWQgc3BlY2llcy4gVXBvbiBzd2l0Y2hpbmcgdG8gZXRoYW5v
        bCwgb25seSBNZXRoeWxvdmVyc2F0aWxpcyBzcHAuIHdhcyBzdXN0YWluZWQg
        cG9pbnRpbmcgdG8gdGhlaXIgbWV0YWJvbGljIHZlcnNhdGlsaXR5IGF0IGxl
        YXN0IHdpdGggcmVzcGVjdCB0byBjYXJib24gYXNzaW1pbGF0aW9uLiBUaGlz
        IHN0dWR5IHJlcHJlc2VudHMgb25lIG9mIHRoZSBmaXJzdCBpbnZlc3RpZ2F0
        aW9ucyBvZiB0aGUgZXhpc3RlbmNlIGFuZCB1dGlsaXphdGlvbiBvZiBmYWN1
        bHRhdGl2ZSBtZXRoeWxvdHJvcGh5IGluIGFjdGl2YXRlZCBzbHVkZ2UuIFNl
        Y29uZCwgdGhlIHBvdGVudGlhbCBvZiBOMk8gYW5kIE5PIGVtaXR0ZWQgZnJv
        bSBtZXRoYW5vbCBhbmQgZXRoYW5vbCBmZWQgZGVuaXRyaWZ5aW5nIFNCUnMg
        d2FzIHN0dWRpZWQgZHVyaW5nIGRpZmZlcmVudCB0cmFuc2llbnQgc2hvY2tz
        LCBpbmNsdWRpbmcgb3JnYW5pYyBjYXJib24gbGltaXRhdGlvbiwgbml0cml0
        ZSBpbmhpYml0aW9uIGFuZCBveHlnZW4gaW5oaWJpdGlvbi4gT3JnYW5pYyBj
        YXJib24gbGltaXRhdGlvbiBhbmQgZXhwb3N1cmUgdG8gbml0cml0ZSBkaWQg
        bm90IHJlc3VsdCBpbiBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGVtaXNz
        aW9ucyBvdmVyIHRoZSBjb250cm9sLiBIb3dldmVyLCBzdGF0aXN0aWNhbGx5
        IGhpZ2hlciBOMk8gZW1pc3Npb25zIHdlcmUgb2JzZXJ2ZWQgZHVyaW5nIGV4
        cG9zdXJlIHRvIG94eWdlbiBvbiB0aGUgZXRoYW5vbCBmZWQgYmlvbWFzcyBh
        bmQgY29pbmNpZGVkIHdpdGggc3VzdGFpbmVkIGRlbml0cmlmaWNhdGlvbiBh
        Y3Rpdml0eSBpbiB0aGUgcHJlc2VuY2Ugb2Ygb3h5Z2VuLiBUaGVyZWZvcmUs
        IHRoZSByZXN1bHRzIHN1Z2dlc3QgdGhhdCB0aGUgZG9zYWdlIG9mIGV0aGFu
        b2wgdG8gYW5veGljIHpvbmVzIG5lZWRzIHRvIGJlIHN0cmljdGx5IGNvbnRy
        b2xsZWQgdG8gbWluaW1pemUgTjJPIGVtaXNzaW9ucyBpbiB0aGUgZG93bnN0
        cmVhbSBhZXJvYmljIHpvbmVzLiBUaGlyZCwgdGhlIHN0cnVjdHVyZS1mdW5j
        dGlvbiBhbmFseXNpcyBvZiBkZW5pdHJpZmljYXRpb24gd2FzIGV4dGVuZGVk
        IHRvIGdseWNlcm9sICh0aGUgbWFpbiBjb21wb25lbnQgb2YgYmlvZGllc2Vs
        IHdhc3RlIGFuZCBhIHBvdGVudGlhbCByZXBsYWNlbWVudCBmb3IgbWV0aGFu
        b2wpIGluIGJvdGggc3VzcGVuZGVkIGFuZCBiaW9maWxtIHBoYXNlcyBvZiBh
        IGh5YnJpZCBpbnRlZ3JhdGVkIGZpeGVkLWZpbG0gYmlvcmVhY3Rvci4gRHVy
        aW5nIGxvbmctdGVybSBvcGVyYXRpb24gb24gZ2x5Y2Vyb2wsIHRoZSBiaW9m
        aWxtIGNvbW11bml0eSBoYWQgYSBoaWdoZXIgcGh5bG9nZW5ldGljIGRpdmVy
        c2l0eSAoZG9taW5hdGVkIGJ5IENvbWFtb25hcyBzcHAuLCBCcmFkeXJoaXpv
        Yml1bSBzcHAuLCBhbmQgVGVzc2FyYWNvY2N1cyBzcHAuKSwgYW5kIGxvd2Vy
        IGRlbml0cmlmaWNhdGlvbiBraW5ldGljcyB0aGFuIHRoZSBzdXNwZW5kZWQg
        Y29tbXVuaXR5IChkb21pbmF0ZWQgYnkgQ29tYW1vbmFzIHNwcC4gYW5kIERp
        YXBob3JvYmFjdGVyIHNwcC4pLiBEaXN0aW5jdCBpZGVudGl0aWVzIG9mIGds
        eWNlcm9sIGFzc2ltaWxhdGluZyBwb3B1bGF0aW9ucyBkdWUgdG8gdGhlIGRp
        ZmZlcmVudCBzdWJzdHJhdGUgYXZhaWxhYmlsaXR5IGluIHRoZSBzdXNwZW5k
        ZWQgYW5kIGJpb2ZpbG0gcGhhc2VzIHdlcmUgc2hvd24gZm9yIHRoZSBmaXJz
        dCB0aW1lLiBGb3VydGgsIGNhcmJvbiBzb3VyY2Utc3BlY2lmaWMgYmlvbWFy
        a2VycyBvZiBkZW5pdHJpZmljYXRpb24gYWN0aXZpdHkgYmFzZWQgb24gZ2Vu
        ZSBleHByZXNzaW9uIHdlcmUgZGV2ZWxvcGVkLiBCYXNlZCBvbiBzaG9ydC10
        ZXJtIGJhdGNoIGRlbml0cmlmaWNhdGlvbiBhY3Rpdml0eSBhc3NheXMgYXMg
        d2VsbCBhcyBsb25nLXRlcm0gYmlvcmVhY3RvciBvcGVyYXRpb24sIHRoZSBh
        cHBsaWNhYmlsaXR5IG9mIGFsY29ob2wgZGVoeWRyb2dlbmFzZSBnZW5lIGV4
        cHJlc3Npb24gYXMgcXVhbnRpdGF0aXZlIGRlc2NyaXB0b3JzIG9mIGRlbml0
        cmlmaWNhdGlvbiBhY3Rpdml0eSBvbiBtZXRoYW5vbCBhbmQgZ2x5Y2Vyb2wg
        aW4gbWl4ZWQgY3VsdHVyZXMgd2FzIGRlbW9uc3RyYXRlZC4gIEZpbmFsbHks
        IE1ldGh5bG92ZXJzYXRpbGlzIHVuaXZlcnNhbGlzIHdhcyBzZWxlY3RlZCBh
        cyBtb2RlbCBvcmdhbmlzbSB0byBzdHVkeSB0aGUgZWZmZWN0cyBvZiB2YXJ5
        aW5nIGVsZWN0cm9uIGRvbm9ycyAoZnJvbSBtZXRoYW5vbCB0byBldGhhbm9s
        KSBvbiBpdHMgZ2VuZSBhbmQgcHJvdGVpbiBleHByZXNzaW9uIHByb2ZpbGVz
        LiBHZW5lcyBlbmNvZGluZyBlc3NlbnRpYWwgZW56eW1lcyB0aGF0IGludm9s
        dmUgY2FyYm9uIG94aWRhdGlvbiwgQzEgYXNzaW1pbGF0aW9uIGFuZCBjZW50
        cmFsIG1ldGFib2xpc20gd2VyZSBmb3VuZCB0byBiZSBkaWZmZXJlbnRpYWxs
        eSBleHByZXNzZWQgZHVyaW5nIGdyb3d0aCBvbiBtZXRoYW5vbCBhbmQgZXRo
        YW5vbC4gU2V2ZXJhbCBwaHlzaW9sb2dpY2FsIGFuZCBtZXRhYm9saWMgcmVz
        cG9uc2VzIGJ5IE0uIHVuaXZlcnNhbGlzIHBvaW50ZWQgdG8gYSB3ZWxsLWRl
        ZmluZWQgc3RyYXRlZ3kgdG8gb3ZlcmNvbWUgY2FyYm9uIGxpbWl0YXRpb24g
        Zm9yIHN1cnZpdmluZyBpbiBlbmdpbmVlcmVkIG9yIG5hdHVyYWwgZGVuaXRy
        aWZ5aW5nIGVudmlyb25tZW50cy4gSW4gc3VtLCB0aGUgc3RydWN0dXJhbCBh
        bmQgZnVuY3Rpb25hbCBlY29sb2d5IGFuZCB0aGUgbWV0YWJvbGlzbSBvZiBo
        ZXRlcm90cm9waGljIGRlbml0cmlmaWNhdGlvbiBvbiBtZXRoYW5vbCwgZXRo
        YW5vbCBhbmQgZ2x5Y2Vyb2wgYXMgYXBwbGljYWJsZSB0byBlbmdpbmVlcmVk
        IGRlbml0cmlmeWluZyBiaW9yZWFjdG9ycyB3YXMgaW52ZXN0aWdhdGVkIGlu
        IGRldGFpbC4gRnJvbSBhbiBlbmdpbmVlcmluZyBwZXJzcGVjdGl2ZSwgdGhl
        IGtub3dsZWRnZSBnYWluZWQgY2FuIGhlbHAgdG8gZ3VpZGUgdGhlIHNlbGVj
        dGlvbiBhbmQgYXBwbGljYXRpb24gb2YgcG90ZW50aWFsIG9yZ2FuaWMgY2Fy
        Ym9uIHNvdXJjZXMgZm9yIGRlbml0cmlmaWNhdGlvbiBpbiBiaW9sb2dpY2Fs
        IG5pdHJvZ2VuIHJlbW92YWwgc3lzdGVtcy4gSXQgaXMgZXhwZWN0ZWQgdGhh
        dCBzdWNoIGp1ZGljaW91cyBzZWxlY3Rpb24gY2FuIGFsc28gZXZlbnR1YWxs
        eSByZXN1bHQgaW4gYmV0dGVyIGRlc2lnbiwgb3BlcmF0aW9uIGFuZCBjb250
        cm9sIG9mIGVuZ2luZWVyZWQgbml0cm9nZW4gcmVtb3ZhbCBwcm9jZXNzZXMg
        YW5kIHRodXMgaGVscCBhdHRhaW4gZXZlciBtb3JlIHN0cmluZ2VudCBuaXRy
        b2dlbiBzdGFuZGFyZHMuJywnc3ViamVjdF9mYWNldCc9PlsnRW52aXJvbm1l
        bnRhbCBlbmdpbmVlcmluZyddLCdub3Rlcyc9PlsnUGguRC4sIENvbHVtYmlh
        IFVuaXZlcnNpdHkuJ10sJ3R5cGVfb2ZfcmVzb3VyY2VfbW9kcyc9PlsndGV4
        dCddLCd0eXBlX29mX3Jlc291cmNlX2ZhY2V0Jz0+WydUZXh0J10sJ29yZ2Fu
        aXphdGlvbl9mYWNldCc9PlsnQ29sdW1iaWEgVW5pdmVyc2l0eSddLCdkZXBh
        cnRtZW50X2ZhY2V0Jz0+WydFYXJ0aCBhbmQgRW52aXJvbm1lbnRhbCBFbmdp
        bmVlcmluZyddLCdzY29yZSc9PjAuMzE3NDU0Mzd9LHsnaWQnPT4nYWM6MTk4
        MTEzJywncmVjb3JkX2NyZWF0aW9uX2RhdGUnPT4nMjAxNi0wNC0yOVQyMTox
        NDo0MVonLCdsYW5ndWFnZSc9PidFbmdsaXNoJywnZGF0ZV9pc3N1ZWQnPT4n
        MjAxNicsJ2hhbmRsZSc9PidodHRwOi8vZHguZG9pLm9yZy8xMC43OTE2L0Q4
        UVI0WDRNJywndGl0bGVfZGlzcGxheSc9PidNaWNyb2JpYWwgU3RydWN0dXJl
        IGFuZCBGdW5jdGlvbiBvZiBFbmdpbmVlcmVkIEJpb2xvZ2ljYWwgTml0cm9n
        ZW4gVHJhbnNmb3JtYXRpb24gUHJvY2Vzc2VzOiBJbXBhY3RzIG9mIEFlcmF0
        aW9uIGFuZCBPcmdhbmljIENhcmJvbiBvbiBQcm9jZXNzIFBlcmZvcm1hbmNl
        IGFuZCBFbWlzc2lvbnMgb2YgTml0cm9nZW5vdXMgR3JlZW5ob3VzZSBHYXMn
        LCdhdXRob3JfaW5mbyc9PlsnQnJvdHRvLCBBcmlhbmUgQ29lbGhvIDogYWNi
        MjE5OCA6IENvbHVtYmlhIFVuaXZlcnNpdHkuIEVhcnRoIGFuZCBFbnZpcm9u
        bWVudGFsIEVuZ2luZWVyaW5nJ10sJ2F1dGhvcl9mYWNldCc9PlsnQnJvdHRv
        LCBBcmlhbmUgQ29lbGhvJ10sJ2F1dGhvcl9kaXNwbGF5Jz0+J0Jyb3R0bywg
        QXJpYW5lIENvZWxobycsJ3B1Yl9kYXRlX2ZhY2V0Jz0+WycyMDE2J10sJ2dl
        bnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJ10sJ2Fic3RyYWN0Jz0+J1Ro
        aXMgZG9jdG9yYWwgcmVzZWFyY2ggcHJvdmlkZXMgYW4gYWR2YW5jZWQgbW9s
        ZWN1bGFyIGFwcHJvYWNoIGZvciB0aGUgaW52ZXN0aWdhdGlvbiBvZiBtaWNy
        b2JpYWwgc3RydWN0dXJlIGFuZCBmdW5jdGlvbiBpbiByZXNwb25zZSB0byBv
        cGVyYXRpb25hbCBjb25kaXRpb25zIG9mIGJpb2xvZ2ljYWwgbml0cm9nZW4g
        cmVtb3ZhbCAoQk5SKSBwcm9jZXNzZXMsIGluY2x1ZGluZyB0aG9zZSBsZWFk
        aW5nIHRvIGRpcmVjdCBwcm9kdWN0aW9uIG9mIGEgbWFqb3IgZ3JlZW5ob3Vz
        ZSBnYXMsIG5pdHJvdXMgb3hpZGUgKE7igoJPKS4gVGhlIHdhc3Rld2F0ZXIg
        dHJlYXRtZW50IHNlY3RvciBpcyBlc3RpbWF0ZWQgdG8gYWNjb3VudCB3aXRo
        IDMlIG9mIHRvdGFsIGFudGhyb3BvZ2VuaWMgTuKCgk8gZW1pc3Npb25zLiBO
        ZXZlcnRoZWxlc3MsIHRoZSBjb250cmlidXRpb24gZnJvbSB3YXN0ZXdhdGVy
        IHRyZWF0bWVudCBwbGFudHMgKFdXVFBzKSBpcyBjb25zaWRlcmVkIHVuZGVy
        ZXN0aW1hdGVkIGR1ZSB0byBzZXZlcmFsIGxpbWl0YXRpb25zIG9uIHRoZSBl
        c3RpbWF0aW9uIG1ldGhvZG9sb2d5IGFwcHJvYWNoIHN1Z2dlc3RlZCBieSB0
        aGUgSW50ZXJnb3Zlcm5tZW50YWwgUGFuZWwgb24gQ2xpbWF0ZSBDaGFuZ2Ug
        KElQQ0MpLiBBbHRob3VnaCBmb3IgdGhlIHBhc3QgeWVhcnMgZWZmb3J0cyBo
        YXZlIGJlZW4gbWFkZSB0byBjaGFyYWN0ZXJpemUgdGhlIHByb2R1Y3Rpb24g
        b2YgTuKCgk8gZnJvbSB0aGVzZSBzeXN0ZW1zLCB0aGVyZSBhcmUgc3RpbGwg
        c2V2ZXJhbCBsaW1pdGF0aW9ucyBvbiBmdW5kYW1lbnRhbCBrbm93bGVkZ2Ug
        YW5kIG9wZXJhdGlvbmFsIGFwcGxpY2F0aW9ucy4gVGhvc2UgaW5jbHVkZSBs
        YWNrIG9mIGluZm9ybWF0aW9uIG9mIE7igoJPIHByb2R1Y3Rpb24gcGF0aHdh
        eXMgYXNzb2NpYXRlZCB3aXRoIGNvbnRyb2wgb2YgYWVyYXRpb24sIHN1cHBs
        ZW1lbnRhbCBvcmdhbmljIGNhcmJvbiBzb3VyY2VzIGFuZCBhZGFwdGF0aW9u
        IG9mIHRoZSBtaWNyb2JpYWwgY29tbXVuaXR5IHRvIHRoZSByZXBlYXRlZCBv
        cGVyYXRpb25hbCBjb25kaXRpb25zLCBhbW9uZyBvdGhlcnMuIFRoZSBjb21w
        b25lbnRzIG9mIHRoaXMgdGhlc2lzLCBsYWItc2NhbGUgaW52ZXN0aWdhdGlv
        bnMgYW5kIGZ1bGwtc2NhbGUgbW9uaXRvcmluZyBvZiBO4oKCTyBwcm9kdWN0
        aW9uIHBhdGh3YXlzIGFuZCBlbWlzc2lvbnMgaW4gY29uanVuY3Rpb24gd2l0
        aCBtZXRhLW9taWNzIGFwcHJvYWNoLCBoYXZlIGEgY29tYmluZWQgcm9sZSBp
        biBhZGRyZXNzaW5nIHN1Y2ggbGltaXRhdGlvbnMuCiAgICAgIExhYi1zY2Fs
        ZSBleHBlcmltZW50cyBpbXBvc2luZyBzaG9ydC10ZXJtIGFub3hpYy1hZXJv
        YmljIGN5Y2xpbmcgb24gcGFydGlhbC0gYW5kIGZ1bGwtbml0cmlmaWNhdGlv
        biBiYXNlZCBwcm9jZXNzZXMgd2VyZSBjb25kdWN0ZWQgdG8gaW52ZXN0aWdh
        dGUgdGhlIG1pY3JvYmlhbCByZXNwb25zZSB0byBO4oKCTyBwcm9kdWN0aW9u
        LiBJbnRlcmVzdGluZ2x5LCBpdCB3YXMgZGV0ZXJtaW5lZCB0aGF0IGZ1bGwt
        bml0cmlmaWNhdGlvbiBzeXN0ZW1zIGNvdWxkIGJlIGEgaGlnaGVyIGNvbnRy
        aWJ1dG9yIHRvIE7igoJPIHByb2R1Y3Rpb24gYW5kIGVtaXNzaW9ucyB0aGFu
        IHBhcnRpYWwtbml0cmlmaWNhdGlvbi4gV2hpbGUgaXQgaGFzIGJlZW4gcmVw
        b3J0ZWQgaW4gdGhlIGxpdGVyYXR1cmUgYSBoaWdoZXIgY29udHJpYnV0aW9u
        IGZyb20gdGhlIGxhdHRlciB3aGVuIHRoZSBtaWNyb2JpYWwgY29tbXVuaXR5
        IGlzIG5vdCBzdWJqZWN0ZWQgdG8gb3h5Z2VuIGN5Y2xpbmcgY29uZGl0aW9u
        cy4gRm9sbG93aW5nIHRoZSBrbm93bGVkZ2Ugb2J0YWluZWQgd2l0aCBhIHNp
        bmdsZSBhbm94aWMtYWVyb2JpYyBjeWNsZSBpbXBvc2VkIHRvIG5pdHJpZnlp
        bmcgY29tbXVuaXRpZXMsIGxvbmctdGVybSBhZGFwdGF0aW9uIG9mIHRoZSBt
        aWNyb2JpYWwgY29tbXVuaXR5IHRvIGNvbnRpbnVlZCBhbm94aWMtYWVyb2Jp
        YyBjeWNsaW5nIGFuZCBpdHMgaW1wYWN0IG9uIE7igoJPIHByb2R1Y3Rpb24g
        d2VyZSBpbnZlc3RpZ2F0ZWQgdGhyb3VnaCBhIG1ldGEtb21pY3MgYXBwcm9h
        Y2guIExvbmctdGVybSBzdHVkaWVzIGFyZSBwYXJ0aWN1bGFybHkgc2lnbmlm
        aWNhbnQgcmVnYXJkaW5nIGVuZ2luZWVyZWQgc3lzdGVtcywgd2hlcmUgdGhl
        IG1pY3Jvb3JnYW5pc21zIGFyZSBjb250aW51YWxseSBzdWJqZWN0ZWQgdG8g
        Y3ljbGluZyBjb25kaXRpb25zIGFnYWluIGFuZCBhZ2Fpbi4gQSBtaWNyb2Jp
        YWwgYWRhcHRhdGlvbiBhdCB0aGUgUk5BIGxldmVsIHdhcyBpZGVudGlmaWVk
        IG9uIGJvdGggYXV0b3Ryb3BoIGFuZCBoZXRlcm90cm9waCBvcmdhbmlzbXMu
        IFRoZSB0cmFuc2NyaXB0cyBvZiB0aGUgbWV0YWJvbGljIHBhdGh3YXlzIHJl
        bGF0ZWQgdG8gTk8gYW5kIE7igoJPIHByb2R1Y3Rpb24gKG5pciwgbm9yKSBh
        bmQgY29uc3VtcHRpb24gKG5vciwgbm9zKSB3ZXJlIGluaXRpYWxseSBpbmR1
        Y2VkIGZvbGxvd2VkIGJ5IGEgZ3JhZHVhbCBkZWNsaW5lLCBsZWFkaW5nIHRv
        IGEgcGFyYWxsZWwgcmVkdWN0aW9uIGluIGdhc2VvdXMgZW1pc3Npb25zIG92
        ZXIgdGltZS4gT3RoZXIgcGF0aHdheXMgbm90IHR5cGljYWxseSBpbnRlcnJv
        Z2F0ZWQgaW4gY29uanVuY3Rpb24gd2l0aCB0aGUgbml0cm9nZW4gbWV0YWJv
        bGlzbSwgc3VjaCBhcyBlbGVjdHJvbiB0cmFuc3BvcnQgY2hhaW4gYW5kIGNh
        cmJvbiBmaXhhdGlvbiB3ZXJlIGFsc28gaW52ZXN0aWdhdGVkIGFuZCByZXZl
        YWxlZCBhIG1lY2hhbmlzbSB0byBvdmVyY29tZSB0aGUgaW1iYWxhbmNlIGlu
        IGVsZWN0cm9uIGZsb3cgYW5kIGdlbmVyYXRpb24gb2YgcHJvdG9uIG1vdGl2
        ZSBmb3JjZSAoaW5jcmVhc2VkIHRyYW5zY3JpcHRpb24gb2YgdGVybWluYWwg
        b3hpZGFzZSBnZW5lcywgY2NvIGFuZCBjb3gpIHRvIHVwaG9sZCBjYXJib24g
        Zml4YXRpb24gZHVyaW5nIGNvbnRpbnVlZCBjeWNsaW5nLgogICAgICBUaGUg
        c2Vjb25kIHBhcnQgb2YgdGhpcyB0aGVzaXMgZm9jdXNlcyBvbiBmdWxsLXNj
        YWxlIFdXVFBzLCB3aGVyZSBpdCBpcyBjcnVjaWFsIHRvIGRldGVybWluZSBz
        cGVjaWZpYyBudWFuY2VzIG9mIHRoZSBzeXN0ZW1z4oCZIGR5bmFtaWNzIGFu
        ZCBvZiB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIHRyZWF0bWVudCB0aGF0IG1h
        eSBjb250cmlidXRlIHRvIGluY3JlYXNlZCBwcm9kdWN0aW9uIGFuZCBlbWlz
        c2lvbnMgb2YgTuKCgk8uIEZvciB0aGF0IHB1cnBvc2UsIHR3byBkaXN0aW5j
        dCBCTlIgc3lzdGVtcyBub3QgdXN1YWxseSBjb25zaWRlcmVkIGFuZCBzdHVk
        aWVkIGluIHRlcm1zIG9mIE7igoJPIHByb2R1Y3Rpb24gYW5kIGVtaXNzaW9u
        cyB3ZXJlIGNob3Nlbi4gRmlyc3QsIGEgc2VwYXJhdGUgY2VudHJhdGUgdHJl
        YXRtZW50IChTQ1QpIHByb2Nlc3MgZW1wbG95aW5nIGdseWNlcm9sIGFzIHRo
        ZSBzdXBwbGVtZW50YWwgY2FyYm9uIHNvdXJjZSB3YXMgbW9uaXRvcmVkLiBT
        aWduaWZpY2FudGx5LCB0aGlzIHN5c3RlbSB3YXMgZm91bmQgdG8gaGF2ZSBv
        bmUgb2YgdGhlIGhpZ2hlc3QgbGV2ZWxzIG9mIE7igoJPIHByb2R1Y3Rpb24g
        YW5kIGVtaXNzaW9uIHJlcG9ydCB0aHVzIGZhci4gR2x5Y2Vyb2wgcmV2ZWFs
        ZWQgdG8gZm9zdGVyIGEgbWljcm9iaWFsIGNvbW11bml0eSAoaS5lLiBCdXJr
        aG9sZGVyaWFsZXMsIFJob2RvYmFjdGVyYWxlcyBhbmQgU3BoaW5nb21vbmFk
        YWxlcykgdGhhdCBzdG9yZXMgaW50ZXJuYWwgY2FyYm9uIGFuZCBwcm9tb3Rl
        IHBhcnRpYWwgZGVuaXRyaWZpY2F0aW9uLCBsZWFkaW5nIHRvIGFjY3VtdWxh
        dGlvbiBvZiBuaXRyaXRlIGFuZCBO4oKCTyBbNy0xMV0uIFNlY29uZCwgYm90
        aCBmaXhlZC0gYW5kIG1vdmluZy1iZWQgYmlvZmlsbSBCTlIgc3lzdGVtcyB3
        ZXJlIGludmVzdGlnYXRlZC4gVGhlIG92ZXJhbGwgTuKCgk8gZW1pc3Npb24g
        ZnJhY3Rpb25zIGZvciB0aGUgSW50ZWdyYXRlZCBGaXhlZC1GaWxtIEFjdGl2
        YXRlZCBTbHVkZ2UgKElGQVMpKDAuMDkg4oCTIDEuMSUgaW5mbC1US04pIGFu
        ZCBkZW5pdHJpZmljYXRpb24gZmlsdGVycyAoMC4xMSDigJMgMS40JSBpbmZs
        LVROKSB3ZXJlIHNpbWlsYXIgdG8gdGhlIHJlcG9ydGVkIGVtaXNzaW9ucyBm
        cm9tIHN1c3BlbmRlZCBncm93dGggYWN0aXZhdGVkIHNsdWRnZSBzeXN0ZW1z
        IFs0LTZdLiBGb3IgdGhlIElGQVMgc3lzdGVtLCBhcXVlb3VzIGFuZCBnYXNl
        b3VzIE7igoJPIHByb2ZpbGVzIHBhcmFsbGVsZWQgdGhlIGRpdXJuYWwgdmFy
        aWFiaWxpdHkgb24gaW5mbHVlbnQgbml0cm9nZW4gbG9hZC4gVGhlIHByb2R1
        Y3Rpb24gb2YgTuKCgk8gd2FzIHNpZ25pZmljYW50bHkgY29ycmVsYXRlZCB3
        aXRoIGFtbW9uaWEgY29uY2VudHJhdGlvbiAocDwwLjA1LCByPTAuOTEpLCBz
        dWdnZXN0aW5nIHRoZSBwcm9kdWN0aW9uIHRocm91Z2ggaHlkcm94eWxhbWlu
        ZSBveGlkYXRpb24gcGF0aHdheS4gRGVuaXRyaWZpY2F0aW9uIGZpbHRlcnMg
        ZGlzcGxheWVkIGEgdmVyeSBwZWN1bGlhciBwYXR0ZXJuIG9uIE7igoJPIGVt
        aXNzaW9ucyBhc3NvY2lhdGVkIHdpdGggaW50ZXJtaXR0ZW50IG9wZXJhdGlv
        bmFsIGN5Y2xlcyAoaS5lLiBuaXRyb2dlbiByZWxlYXNlIGN5Y2xlIGFuZCBi
        YWNrd2FzaCkuIFRoZXNlIGludHJpbnNpYyBvcGVyYXRpb25zIG9mIHRoZSBk
        ZW5pdHJpZmljYXRpb24gZmlsdGVycyBjb250cmlidXRlZCB0byB0cmFuc2ll
        bnQgb3h5Z2VuIGNvbmRpdGlvbnMgYW5kIG5lYXJseSB0aGUgZW50aXJlIE7i
        goJPIGVtaXNzaW9ucyB0aHJvdWdoIGdhc2VvdXMgc3RyaXBwaW5nIGFuZCBw
        cm9kdWN0aW9uIGJ5IGluaGliaXRpb24gb2YgZGVuaXRyaWZpY2F0aW9uLiBT
        aW1pbGFybHkgdG8gc3VzcGVuZGVkIGdyb3d0aCBzeXN0ZW1zLCBwcm9jZXNz
        IGRlc2lnbiBhbmQgb3BlcmF0aW9ucyBkZW1vbnN0cmF0ZWQgdG8gYWxzbyBw
        bGF5IGFuIGltcG9ydGFudCByb2xlIGluIE7igoJPIGVtaXNzaW9ucyBmcm9t
        IGF0dGFjaGVkIGdyb3d0aCBwcm9jZXNzZXMuCiAgICAgIEZpbmFsbHksIGFl
        cmF0aW9uIHN0cmF0ZWdpZXMgZm9yIGVuZXJneSBlZmZpY2llbnQgY29udmVu
        dGlvbmFsIG5pdHJpZmljYXRpb24gYmFzZWQgb24gdGhlIG1pY3JvYmlhbCBj
        b21tdW5pdHkgZGV2ZWxvcG1lbnQgYW5kIGl0cyBhc3NvY2lhdGVkIHBlcmZv
        cm1hbmNlIHdhcyBpbnZlc3RpZ2F0ZWQgaW4gbGFiLXNjYWxlLiBJdCB3YXMg
        ZGVtb25zdHJhdGVkIHRoYXQgdXNpbmcgdGhlIHNhbWUgYWlyIHN1cHBseSBy
        YXRlLCBjb250aW51b3VzIGFuZCBpbnRlcm1pdHRlbnQgYWVyYXRpb24gcmVz
        dWx0ZWQgaW4gY29tcGxldGVseSBkaWZmZXJlbnQgbWljcm9iaWFsIHN0cnVj
        dHVyZS4gQ29uc2VxdWVudGx5LCBkaXN0aW5jdCBraW5ldGljcyBhbmQgbml0
        cmlmaWNhdGlvbiBwZXJmb3JtYW5jZSB3ZXJlIG9ic2VydmVkLiBUaGUgYWVy
        YXRpb24gcmF0ZSBjb3VsZCBiZSBtaW5pbWl6ZWQgKHJlc3VsdGluZyBpbiBy
        ZWR1Y3Rpb24gaW4gZW5lcmd5IGNvbnN1bXB0aW9uKSBmb3IgaGlnaCBhbW1v
        bmlhIHJlbW92YWwgZWZmaWNpZW5jeSBhbmQgbG93ZXIgTuKCgk8gZW1pc3Np
        b25zLCBhcyBsb25nIGFzIHRoZSBwcm9jZXNzIGlzIGRlc2lnbmVkIGFjY29y
        ZGluZ2x5IHRvIHRoZSBtaWNyb2JpYWwgZWNvbG9neSBkZXZlbG9wZWQgaW4g
        c3VjaCBjb25kaXRpb25zLiAKICAgICAgSW4gc3VtLCB0aGUgbWljcm9iaWFs
        IHN0cnVjdHVyZSwgZnVuY3Rpb24gYW5kIGNvbm5lY3Rpb24gb2YgbWV0YWJv
        bGljIHBhdGh3YXlzIG9mIGNvbXBsZXggZW5naW5lZXJlZCBtaWNyb2JpYWwg
        Y29tbXVuaXRpZXMgYXMgYXBwbGljYWJsZSB0byBCTlIgc3lzdGVtcyBhbmQg
        aXRzIG9wZXJhdGlvbnMgd2VyZSBpbnZlc3RpZ2F0ZWQgaW4gZGV0YWlsLiBG
        cm9tIGFuIGVuZ2luZWVyaW5nIHBlcnNwZWN0aXZlLCB0aGlzIGRpc3NlcnRh
        dGlvbiBwcm92aWRlcyBhbiBhZHZhbmNlbWVudCBvbiB0aGUgbW9sZWN1bGFy
        IGFwcHJvYWNoIHRvIGNoYXJhY3Rlcml6ZSBzdHJ1Y3R1cmUgYW5kIGZ1bmN0
        aW9uIG9mIG1pY3JvYmlhbCByZXNwb25zZXMgdG8gZW5naW5lZXJlZCBvcGVy
        YXRpb25zIGJleW9uZCB0aGUgYnVzaW5lc3MtYXMtdXN1YWwgdGFyZ2V0IGdl
        bmVzLCB3aGljaCBjYW4gZXZlbnR1YWxseSByZXN1bHQgaW4gYmV0dGVyIGRl
        c2lnbiBhbmQgY29udHJvbCBvZiBlbmdpbmVlcmVkIEJOUiBwcm9jZXNzZXMu
        IFRoaXMgc3R1ZHkgb2ZmZXJzIG1vcmUgdGhhbiBhbiBpbXByb3ZlZCBzY2ll
        bnRpZmljIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGNvbXBsZXggbWljcm9iaWFs
        IGVudmlyb25tZW50IGFuZCBkaXJlY3QgZW5naW5lZXJpbmcgYXBwbGljYXRp
        b25zLiBJdCBjb25uZWN0cyBzYW5pdGF0aW9uIHdpdGggd2F0ZXIgcXVhbGl0
        eSBhbmQgdGhlIGdyZWVuaG91c2UgZ2FzIGVmZmVjdCBieSBwcmlvcml0aXpp
        bmcgY29uY3VycmVudCBlbmhhbmNlZCBiaW9sb2dpY2FsIG5pdHJvZ2VuIHJl
        bW92YWwgYW5kIG1pdGlnYXRpb24gb2YgTuKCgk8gcHJvZHVjdGlvbiBhbmQg
        ZW1pc3Npb24uIFVsdGltYXRlbHkgdGhlIGltcGxpY2F0aW9ucyBvZiB0aGUg
        cmVzdWx0IHByZXNlbnRlZCBoZXJlaW4gY2FuIHByb3ZpZGUgZWNvbm9taWNh
        bCwgZW52aXJvbm1lbnRhbCwgaGVhbHRoIGJlbmVmaXRzIGZvciB0aGUgc29j
        aWV0eS4nLCdzdWJqZWN0X2ZhY2V0Jz0+WydFbnZpcm9ubWVudGFsIGVuZ2lu
        ZWVyaW5nJywnTWljcm9iaW9sb2d5J10sJ25vdGVzJz0+WydQaC5ELiwgQ29s
        dW1iaWEgVW5pdmVyc2l0eS4nXSwndHlwZV9vZl9yZXNvdXJjZV9tb2RzJz0+
        Wyd0ZXh0J10sJ3R5cGVfb2ZfcmVzb3VyY2VfZmFjZXQnPT5bJ1RleHQnXSwn
        b3JnYW5pemF0aW9uX2ZhY2V0Jz0+WydDb2x1bWJpYSBVbml2ZXJzaXR5J10s
        J2RlcGFydG1lbnRfZmFjZXQnPT5bJ0VhcnRoIGFuZCBFbnZpcm9ubWVudGFs
        IEVuZ2luZWVyaW5nJ10sJ3Njb3JlJz0+MC4wMDMyMTU1NTA3fV19LCdmYWNl
        dF9jb3VudHMnPT57J2ZhY2V0X3F1ZXJpZXMnPT57fSwnZmFjZXRfZmllbGRz
        Jz0+eydhdXRob3JfZmFjZXQnPT5bJ0Jyb3R0bywgQXJpYW5lIENvZWxobycs
        MSwnTHUsIEh1aWppZScsMV0sJ3B1Yl9kYXRlX3NvcnQnPT5bJzIwMTEnLDEs
        JzIwMTYnLDFdLCdkZXBhcnRtZW50X2ZhY2V0Jz0+WydFYXJ0aCBhbmQgRW52
        aXJvbm1lbnRhbCBFbmdpbmVlcmluZycsMl0sJ3N1YmplY3RfZmFjZXQnPT5b
        J0Vudmlyb25tZW50YWwgZW5naW5lZXJpbmcnLDIsJ01pY3JvYmlvbG9neScs
        MV0sJ2dlbnJlX2ZhY2V0Jz0+WydEaXNzZXJ0YXRpb25zJywyXSwnc2VyaWVz
        X2ZhY2V0Jz0+W119LCdmYWNldF9kYXRlcyc9Pnt9LCdmYWNldF9yYW5nZXMn
        PT57fX0sJ3N0YXRzJz0+eydzdGF0c19maWVsZHMnPT57J3B1Yl9kYXRlX3Nv
        cnQnPT57J21pbic9PjIwMTEuMCwnbWF4Jz0+MjAxNi4wLCdjb3VudCc9PjIs
        J21pc3NpbmcnPT4wLCdzdW0nPT40MDI3LjAsJ3N1bU9mU3F1YXJlcyc9Pjgx
        MDgzNzcuMCwnbWVhbic9PjIwMTMuNSwnc3RkZGV2Jz0+My41MzU1MzM5MDU5
        MzI3Mzc4LCdmYWNldHMnPT57fX19fSwnc3BlbGxjaGVjayc9Pnsnc3VnZ2Vz
        dGlvbnMnPT5bJ2NvcnJlY3RseVNwZWxsZWQnLHRydWVdfX0K
    http_version: 
  recorded_at: Tue, 16 Aug 2016 17:51:49 GMT
recorded_with: VCR 3.0.3
