
-# CONTROLS HOW DATABASE RECORDS SHOW IN SEARCH RESULTS LIST

-# Database note/alerts of type "alert" show up w/out key, with special styling
- if document.get("_active_item_alert_count") && document.get("_active_item_alert_count") > 0
  - Array.wrap(document.get("_item_alerts")[:alert]).each do | alert |
    - if alert.active?
      .col-sm-12.alert_alert
        = "ALERT: #{alert[:message]}".html_safe
  - Array.wrap(document.get("_item_alerts")[:access_requirements]).each do | access_requirement |
    - if access_requirement.active?
      = add_row('Access Requirements', access_requirement[:message])

-# = add_row('Restricted', document.get("database_restrictions_display"))
= add_row('Author', document.get("author_display"))
= add_row('Published', document.get("full_publisher_display"))

-# switch from "expand_to" to "teaser"
= add_row('Summary', document.get("summary_display"), :teaser => true)
-# = add_row('Summary', document.get("database_summary_display"), :expand_to => document.get('summary_display'))

- unless (links =  online_link_hash(document)).empty?
  -# non_circ = image_tag("icons/noncirc.png", :class => :availability)
  -# urls = links.collect { |link| non_circ + link_to(link[:title].abbreviate(60), link[:url]) + content_tag(:span, link[:note], :class => "url_link_note") }
  -# urls = urls.first if controller.controller_name == "search"
  =# add_row('Search Database:', urls, { :spans =>[3,9], :label_style => "field database_link" } )
  = add_row( database_link_label(links), format_online_results(links), :spans => [3,9] )


- unless (locations = document["location_display"].listify.reject { |l| l == "Online" }).empty? || document["location_holdings_id_display"].nil?
  .row
    .label Location
    .value
      - locations.each_with_index do |location, i|
        - holdings_id = "holding_" + (document["location_holdings_id_display"].listify[i] || document["location_holdings_id_display"].first).to_s if document["location_holdings_id_display"]
        %div
          = image_tag("icons/unknown.png", :class => "availability " + holdings_id) + shorten_location(location).strip


- if @debug_mode  && @response && @response['debug'] && @response['debug']['explain'] && (score = @response['debug']['explain'][document.get('id').to_s])
  = add_row('Score', score.gsub(/\n/,"").gsub(/\=.+$/,""), :expand_to => content_tag(:pre, score))
