- id = id

.yui-gc
  .yui-u.first

    #show_cover.book_cover
      .gbs_cover
        .gbs_thumbnail
          = image_tag("spacer.png", :class => "bookjacket " + document["isbn_t"].listify.collect { |x| "isbn_" + x.to_s}.join(" "))
        .gbs_preview= link_to image_tag("gb_preview.png"), "http://books.google.com", :class => "gbs_preview_link"
        
    %dl.defList_in_grid
      - document_show_fields.each do |solr_fname|
        - if values = document[solr_fname]
          %dt= document_show_field_labels[solr_fname]
          - case solr_fname 
          - when "author_display"
            %dd
              - values.each do |value|
                = link_to value, url_for(:controller => "catalog", :action => "index", :q => h(value), :search_field => "author", :commit => "search")
          - when "subject_topic_facet"
            %dd
              - values.listify.sort.each do |topic|
                = link_to topic, {:controller => :catalog, :action => :index, "f[subject_topic_facet][]" => topic}
                %br
          - else

            %dd= values.listify.join("<br/>")
    
    #holdings
      #holdings_header
        #holdings_title Holdings:
        #location_guide
          =link_to "(Location Guide)", "http://www.columbia.edu/cu/lweb/help/clio/location_guide.html"

    
      - holdings = Holding.new(document["clio_id_display"]).fetch_from_opac!.results["holdings"]

      - if holdings.empty?
        No holdings data at this time.
      - else
        -content_for :jstemplates do
          :javascript
            $(document).ready(function() {
              $(".location_display").colorbox({transition:'none',scrolling:false});
            });
        -holdings.each_with_index do |holding_hash, i|
          - holding_id, holding = holding_hash
          - location = Location.match_location_text(holding["location_name"])
          .holding{:class => "holding#{i % 2}"}
            .call_number= holding["call_number"]
            .location
              #{image_tag("icons/" + holding["status"] + ".png")}
              - if location && location.category == "physical"
                - check_at = DateTime.now + (params[:add_hours] || 0).to_i.hours
                - unless location.is_open?(check_at)
                  = image_tag("clock_closed.png", :alt => "Closed. Click Library for more hours information", :size => "16x16", :class=> "closed_icon")
                %a.location_display{:href => location_display_path(holding["location_name"])}=holding["location_name"]
              - else
                = holding["location_name"]
            .status
              - if holding["location_name"].strip =="Online"
                - document[:url_fulltext_display].each_with_index do |url,i|
                  %div= link_to online_link_title(document, i), url
              - else
                #{holding["status_for_display"]}



  .yui-u


    %h4 Place Request:
    %ul
      - clio_id = h(document["clio_id_display"])
      - if HTTPClient.new.get_content("http://www.columbia.edu/cgi-bin/cul/lookupNBX?" + clio_id) == 1
        %li= link_to "Off-site request", "http://www.columbia.edu/cgi-bin/cul/offsite2?#{h(document['clio_id_display'])}"
      %li= link_to "Place a Recall/Hold", "http://clio.cul.columbia.edu:7018/vwebv/patronRequests?bibId=#{document["clio_id_display"]}"
      %li= link_to "Borrow Direct", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0012"
      %li= link_to "ILL / Document Delivery", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0014"
      %li= link_to "Inter-Campus Delivery", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0013"
      %li= link_to "In-Process Request", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0002"

    %h4 Actions:
    %ul
      
      %li Print
      - if (@document.respond_to?(:export_as_mla_citation_txt) || @document.respond_to?(:export_as_apa_citation_txt))
        %li.cite
          = link_to "Cite This", citation_catalog_path(:id => id), {:id => "citeLink", :name => "citation", :class => "lightboxLink"}

      - if @document.export_formats.keys.include?(:refworks_marc_txt)
        %li.refworks
          =link_to "Export to RefWorks", refworks_export_url(@document)
      - if @document.export_formats.keys.include?(:endnote)
        %li.endnote
          =link_to "Export to EndNote", catalog_path(id, :format => "endnote")

      - if @document.respond_to?(:to_marc)
        %li.email
          =link_to "Email This", email_catalog_path(:id => id), {:id => "emailLink", :name => "email", :class => "lightboxLink"}
        
        %li.sms
          =link_to "SMS This", sms_catalog_path(:id => id), {:id => "smsLink", :name => "sms", :class => "lightboxLink"}
        %li.librarian_view
          =link_to "Librarian View", librarian_view_catalog_path(id), {:id => "librarianLink", :name => "librarian_view", :class => "lightboxLink" }
        %li.gbs_info= link_to "More Info at Google Books", "http://books.google.com", :class => "gbs_info_link"

    %h4 Help:
    %ul
      %li= link_to "Ask a Librarian", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0031"
      %li= link_to "Item Not On Shelf?", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0055"
      %li= link_to "E-Resource Problem", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0006"
      %li= link_to "Recommend A Title", "http://www.columbia.edu/cgi-bin/cul/resolve?lweb0004"


